{"version":3,"file":"static/js/924.2788e022.chunk.js","mappings":"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","sources":["webpack://oj-client/./src/compenents/Button/Button.module.css?8b47","compenents/Button/Button.js","webpack://oj-client/./src/pages/Codes/Codes.module.css?aca7","../node_modules/@mui/icons-material/esm/ArrowBack.js","pages/Codes/Codes.js","pages/Question/Editor/CodeEditorv3.js","compenents/InputSlider/InputSlider.js","webpack://oj-client/./src/pages/Question/Options/Options.module.css?dacc","pages/Question/Options/Options.js","../node_modules/@mui/icons-material/esm/Check.js","../node_modules/@mui/icons-material/esm/ContentCopy.js","../node_modules/copy-to-clipboard/index.js","../node_modules/toggle-selection/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__bCOnh\",\"skyblue\":\"Button_skyblue__rNZpw\",\"blue\":\"Button_blue__uFsUF\",\"grey\":\"Button_grey__-4fWo\",\"green\":\"Button_green__rEjag\",\"yellow\":\"Button_yellow__fkuwo\"};","import React from 'react'\r\nimport classes from './Button.module.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Button = props => {\r\n    const handler = props.onClick ? props.onClick : () => { };\r\n    return (\r\n        <Link onClick={handler} to={props.to} className={`${classes.btn} ${classes[props.color]}`}>\r\n            <span>{props.children}</span>\r\n        </Link >\r\n    )\r\n}\r\n\r\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Codes_container__zKOAw\",\"contain\":\"Codes_contain__-Thim\",\"back\":\"Codes_back__kOV3u\",\"codeSnippet\":\"Codes_codeSnippet__j2PXd\"};","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { messageActions } from '../../store/Message/message-slice';\r\nimport CodeEditorv3 from '../Question/Editor/CodeEditorv3';\r\nimport ButtonCustom from '../../compenents/Button/Button';\r\nimport { SERVER_LINK } from '../../dev-server-link';\r\nimport Options from '../Question/Options/Options';\r\nimport classes from './Codes.module.css';\r\n\r\nimport { ArrowBack, Check, ContentCopy } from '@mui/icons-material';\r\nimport { IconButton, Tooltip, Zoom } from '@mui/material';\r\n\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst Codes = () => {\r\n\r\n    const [response, setResponse] = useState('');\r\n    const [codeFontSize, setcodeFontSize] = useState(15);\r\n\r\n    const [searchParams] = useSearchParams();\r\n    const dispatch = useDispatch();\r\n\r\n    let codeId = null;\r\n    if (searchParams.get('codeId')) {\r\n        codeId = searchParams.get('codeId');\r\n    }\r\n\r\n    useFetchCode(codeId, setResponse);\r\n\r\n    const [copied, setCopied] = useState(false);\r\n\r\n    if (copied === true)\r\n        setTimeout(() => setCopied(false), 2500);\r\n\r\n    const copyHandler = () => {\r\n        const result = copy(response.code);\r\n        const type = result ? 'success' : 'error';\r\n        const message = result ? 'Code copied successfully !' : 'There are some errors copying the code !';\r\n\r\n        dispatch(messageActions.set({ type, message }));\r\n        setCopied(true);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {!codeId && <div className='errorTemplate'><span>Error : </span>Might be possible that code for this query was never written/saved.</div>}\r\n            {response.error && <div className='errorTemplate'><span>Error : </span>{response.error}</div>}\r\n\r\n            {codeId && !response.error && (\r\n                <div className={classes.container}>\r\n                    <div className={classes.contain}>\r\n                        <div className={classes.back}>\r\n                            <div className={classes.codeSnippet}>\r\n                                &#60; go back to leaderboard /&#62;\r\n                            </div>\r\n                            <ButtonCustom to='/leaderboard' color='yellow'>\r\n                                <ArrowBack style={{ marginRight: '0.3em', transform: 'translateX(-12px)', fontSize: '1.2em' }} />\r\n                                Back\r\n                            </ButtonCustom>\r\n                        </div>\r\n                        <div style={{ position: 'absolute' }}>\r\n                            <Tooltip TransitionComponent={Zoom} title={copied ? 'Copied' : 'Copy'} placement='right'>\r\n                                <IconButton\r\n                                    onClick={copyHandler}\r\n                                    aria-label={copied ? 'Copied' : 'Copy'}\r\n                                >\r\n                                    {copied ? <Check /> : <ContentCopy />}\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                        <Options\r\n                            favStyle={{\r\n                                zIndex: '899',\r\n                                position: 'relative',\r\n                                left: '33%',\r\n                                bottom: '1rem'\r\n                            }}\r\n                            codeFontSize={codeFontSize}\r\n                            setcodeFontSize={setcodeFontSize}\r\n                        />\r\n                        <CodeEditorv3\r\n                            code={response.code}\r\n                            setCode={null}\r\n                            language={response.language}\r\n                            fontSize={codeFontSize}\r\n                            isReadOnly={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nconst useFetchCode = (codeId, setResponse) => {\r\n    useEffect(() => {\r\n        if (!codeId) return;\r\n        fetch(\r\n            `${SERVER_LINK}/api/explore/getcode/${codeId}`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'GET'\r\n            }\r\n        )\r\n            .then(res => res.json())\r\n            .then(data => setResponse(data))\r\n            .catch(error => setResponse({\r\n                error: `server side error, check your network\r\n${error}`\r\n            }))\r\n    }, [codeId, setResponse]);\r\n}\r\n\r\n\r\nexport default Codes;","import React, { Fragment } from 'react'\r\n\r\nimport AceEditor from 'react-ace'\r\n\r\nimport \"ace-builds/webpack-resolver\"\r\n\r\nimport 'ace-builds/src-noconflict/mode-javascript'\r\nimport 'ace-builds/src-noconflict/mode-c_cpp'\r\nimport 'ace-builds/src-noconflict/mode-java'\r\nimport 'ace-builds/src-noconflict/mode-python'\r\n\r\nimport 'ace-builds/src-noconflict/theme-monokai'\r\nimport 'ace-builds/src-noconflict/ext-language_tools'\r\n\r\nconst CodeEditorv3 = props => {\r\n\r\n    const { code, setCode, language, fontSize, isReadOnly = false, isLoading = false } = props;\r\n\r\n    let mode = 'c_cpp';\r\n    switch (language) {\r\n        case 'c':\r\n            mode = 'c_cpp';\r\n            break;\r\n        case 'cpp':\r\n            mode = 'c_cpp';\r\n            break;\r\n        case 'java':\r\n            mode = 'java';\r\n            break;\r\n        case 'py':\r\n            mode = 'python';\r\n            break;\r\n        case 'js':\r\n            mode = 'javascript';\r\n            break;\r\n        default:\r\n            mode = 'c_cpp';\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading && <div style={{ position: 'absolute', zIndex: 10, display: 'flex', alignItems: 'center', pointerEvents: 'none', translate: '0 1rem' }}>\r\n                <div className='spin' />\r\n                <span style={{ fontSize: '1.8rem', color: 'rgba(128, 128, 128, 0.8)', fontWeight: 500, marginLeft: '1rem' }}>Loading Code...</span>\r\n            </div>}\r\n            <AceEditor\r\n                placeholder=\"Enter your code here\"\r\n                mode={mode}\r\n                theme=\"monokai\"\r\n                name=\"editorv3\"\r\n                onLoad={() => {\r\n                    // console.log('loaded')\r\n                }}\r\n                onChange={value => setCode(value)}\r\n                fontSize={parseInt(fontSize)}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                readOnly={isReadOnly}\r\n                highlightActiveLine={true}\r\n                value={code}\r\n                width='100%'\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: false,\r\n                    showLineNumbers: true,\r\n                    tabSize: 4,\r\n                }}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CodeEditorv3;","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Slider from '@mui/material/Slider';\r\nimport MuiInput from '@mui/material/Input';\r\n\r\nimport TextFields from '@mui/icons-material/TextFields';\r\n\r\nconst Input = styled(MuiInput)`\r\n  width: 42px;\r\n`;\r\n\r\nconst InputSlider = ({ codeFontSize: value, setcodeFontSize: setValue }) => {\r\n\r\n    const maxVal = 50, minVal = 5;\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n    };\r\n\r\n    const handleBlur = () => {\r\n        if (value < minVal) {\r\n            setValue(minVal);\r\n        } else if (value > maxVal) {\r\n            setValue(maxVal);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: 250, marginRight: '1rem' }}>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                    <TextFields />\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Slider\r\n                        value={value}\r\n                        onChange={handleSliderChange}\r\n                        aria-labelledby=\"input-slider\"\r\n                        min={minVal}\r\n                        max={maxVal}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Input\r\n                        value={value}\r\n                        size=\"small\"\r\n                        onChange={handleInputChange}\r\n                        onBlur={handleBlur}\r\n                        inputProps={{\r\n                            step: 10,\r\n                            min: minVal,\r\n                            max: maxVal,\r\n                            type: 'number',\r\n                            'aria-labelledby': 'input-slider',\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default InputSlider;","// extracted by mini-css-extract-plugin\nexport default {\"optionHeading\":\"Options_optionHeading__fdusp\",\"optionSnippet\":\"Options_optionSnippet__N0l+l\",\"fontSnippet\":\"Options_fontSnippet__fL-Vn\",\"changeFont\":\"Options_changeFont__gkV59\",\"resetCode\":\"Options_resetCode__dGw-D\"};","import Settings from '@mui/icons-material/Settings'\r\nimport { Button, Drawer, Fab, FormControl, InputLabel, MenuItem, Select } from '@mui/material'\r\nimport React, { Fragment, useState } from 'react'\r\nimport InputSlider from '../../../compenents/InputSlider/InputSlider'\r\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\r\n\r\nimport classes from './Options.module.css';\r\n\r\nconst Options = props => {\r\n\r\n    const {\r\n        favStyle,\r\n        resetCode,\r\n        showCorrectCode,\r\n        codeFontSize,\r\n        selectedLang,\r\n        codeEditable,\r\n        setcodeFontSize,\r\n        setSelectedLang,\r\n        correctCodeAvailable\r\n    } = props;\r\n\r\n    const [drawerOpen, toggleDrawerOpen] = useState(false);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Fab style={favStyle} onClick={() => toggleDrawerOpen(prev => !prev)} color=\"secondary\" aria-label=\"add\">\r\n                <div className={classes.optionSnippet}\r\n                    style={{\r\n                        top: '-1.5rem',\r\n                        whiteSpace: 'nowrap',\r\n                        textTransform: 'lowercase'\r\n                    }}\r\n                >\r\n                    &#60; change lang, font size, ... /&#62;\r\n                </div>\r\n                <Settings />\r\n            </Fab>\r\n            <Drawer\r\n                anchor='right'\r\n                open={drawerOpen}\r\n                onClose={() => toggleDrawerOpen(false)}\r\n            >\r\n                <div style={{ width: '15rem', margin: '1rem' }}>\r\n                    <h1 className={classes.optionHeading} >Options</h1>\r\n\r\n\r\n                    <div className={classes.fontSnippet}>\r\n                        &#60; Font Size /&#62;\r\n                    </div>\r\n                    <div className={classes.changeFont}>\r\n                        <InputSlider codeFontSize={codeFontSize} setcodeFontSize={setcodeFontSize} />\r\n                    </div>\r\n                    {codeEditable &&\r\n                        <Fragment>\r\n                            <div className={classes.changeLang}>\r\n                                <FormControl>\r\n                                    <InputLabel id=\"changeLang-select-label\">Language</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"changeLang-select-label\"\r\n                                        id=\"changeLang-select\"\r\n                                        value={selectedLang}\r\n                                        label=\"Language\"\r\n                                        style={{ width: '8em', height: '2.8em' }}\r\n                                        onChange={e => setSelectedLang(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={'c'}>C</MenuItem>\r\n                                        <MenuItem value={'cpp'}>Cpp</MenuItem>\r\n                                        <MenuItem value={'py'}>Python</MenuItem>\r\n                                        <MenuItem value={'java'}>Java</MenuItem>\r\n                                        <MenuItem value={'js'}>Js</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={classes.resetCode}>\r\n                                <Button color=\"error\" onClick={() => { resetCode(); toggleDrawerOpen(false); }} variant='contained' startIcon={\r\n                                    <RestartAltIcon fontSize='large' style={{ marginRight: '0.5em', fontSize: '2em' }} />\r\n                                } style={{ textTransform: 'capitalize' }}>\r\n                                    ResetCode\r\n                                </Button>\r\n                            </div>\r\n                            {correctCodeAvailable &&\r\n                                <Button color=\"info\" onClick={() => { showCorrectCode(); toggleDrawerOpen(false); }} variant='contained' startIcon={\r\n                                    <RestartAltIcon fontSize='large' style={{ marginRight: '0.5em', fontSize: '2em' }} />\r\n                                } style={{ textTransform: 'capitalize' }}>\r\n                                    ShowCorrectCode.<span style={{ textTransform: 'lowercase' }}>{selectedLang}</span>\r\n                                </Button>\r\n                            }\r\n                        </Fragment>\r\n                    }\r\n                </div>\r\n            </Drawer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Options","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"\n}), 'ContentCopy');","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n"],"names":["props","handler","onClick","_jsx","Link","to","className","concat","classes","btn","color","children","createSvgIcon","d","useFetchCode","codeId","setResponse","useEffect","fetch","SERVER_LINK","headers","method","then","res","json","data","catch","error","_useState","useState","_useState2","_slicedToArray","response","_useState3","_useState4","codeFontSize","setcodeFontSize","_useSearchParams","useSearchParams","searchParams","dispatch","useDispatch","get","_useState5","_useState6","copied","setCopied","setTimeout","_jsxs","Fragment","ButtonCustom","ArrowBack","style","marginRight","transform","fontSize","position","Tooltip","TransitionComponent","Zoom","title","placement","IconButton","result","copy","code","type","message","messageActions","set","Check","ContentCopy","Options","favStyle","zIndex","left","bottom","CodeEditorv3","setCode","language","isReadOnly","_props$isReadOnly","_props$isLoading","isLoading","mode","display","alignItems","pointerEvents","translate","fontWeight","marginLeft","AceEditor","placeholder","theme","name","onLoad","onChange","value","parseInt","showPrintMargin","showGutter","readOnly","highlightActiveLine","width","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","Input","styled","MuiInput","_templateObject","_taggedTemplateLiteral","_ref","setValue","Box","sx","Grid","container","spacing","item","TextFields","xs","Slider","event","newValue","min","max","size","target","Number","onBlur","inputProps","step","resetCode","showCorrectCode","selectedLang","codeEditable","setSelectedLang","correctCodeAvailable","drawerOpen","toggleDrawerOpen","Fab","prev","optionSnippet","top","whiteSpace","textTransform","Settings","Drawer","anchor","open","onClose","margin","optionHeading","fontSnippet","changeFont","InputSlider","changeLang","FormControl","InputLabel","id","Select","labelId","label","height","e","MenuItem","Button","variant","startIcon","RestartAltIcon","deselectCurrent","require","clipboardToIE11Formatting","module","exports","text","options","debug","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","ariaHidden","all","clip","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","forEach","focus"],"sourceRoot":""}