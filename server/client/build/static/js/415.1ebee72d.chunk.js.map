{"version":3,"file":"static/js/415.1ebee72d.chunk.js","mappings":"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","sources":["pages/ServerLogs/ServerLogs.js"],"sourcesContent":["import React, { useState, useEffect, Fragment, useRef } from 'react'\r\nimport { SERVER_LINK } from '../../dev-server-link';\r\nimport { v4 } from 'uuid';\r\nimport './ServerLogs.css';\r\nimport { Button, Fab } from '@mui/material';\r\nimport { KeyboardArrowDown, Visibility } from '@mui/icons-material';\r\nimport io from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// searchKey, className, regexFlags\r\nconst tokens = [\r\n    ['GET', 'get', 'g'],\r\n    ['POST', 'post', 'g'],\r\n    ['PUT', 'put', 'g'],\r\n    ['DELETE', 'delete', 'g'],\r\n    ['Unlinked', 'unlinked', 'g'],\r\n    ['PORT', 'port', 'g'],\r\n    ['Database', 'database', 'g'],\r\n    ['Production', 'production', 'g'],\r\n    ['Note:', 'note', 'g'],\r\n    ['Add Note', 'addnote', 'g'],\r\n    ['Edit Note', 'editnote', 'g'],\r\n    ['Delete Note', 'deletenote', 'g'],\r\n    ['Containers', 'containers', 'g'],\r\n    ['Deleted', 'deleted', 'g'],\r\n    ['Error', 'error', 'g'],\r\n    ['failed', 'failed', 'g'],\r\n    ['LOG', 'log', 'g'],\r\n];\r\n\r\nconst ServerLogs = () => {\r\n\r\n    const loginState = useSelector(state => state.auth);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState();\r\n    const [stdout, setStdout] = useState({});\r\n    const [stderr, setStderr] = useState({});\r\n    const [reColorToken, setReColorToken] = useState(false);\r\n    const [isOut, setIsOut] = useState(true);\r\n    const endRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!loginState.isAdmin) return;\r\n        const newSocket = io(SERVER_LINK, { query: { id: v4() } });\r\n        newSocket.on('logger-new-log', msg => {\r\n            setStdout(prev => [...prev, { msg, id: v4() }])\r\n        });\r\n        newSocket.on('logger-new-error', msg => {\r\n            setStderr(prev => [...prev, { msg, id: v4() }])\r\n        });\r\n        return () => newSocket.close();\r\n    }, [loginState.username, loginState.isAdmin]);\r\n\r\n    useFetchServerLogs(setLoading, setError, setStderr, setStdout, setReColorToken);\r\n\r\n    useColorTokens([reColorToken, isOut, stderr, stdout]);\r\n\r\n    if (loading) return (<div>Loading...</div>);\r\n    else if (error) return (<div>{JSON.stringify(error)}</div>);\r\n    else return (\r\n        <Fragment>\r\n            <Fab onClick={() => endRef.current.scrollIntoView()} style={{\r\n                position: 'fixed', bottom: '4.5em', right: '1em', opacity: '0.9'\r\n            }} size=\"small\" color=\"primary\" aria-label=\"add\">\r\n                <KeyboardArrowDown />\r\n            </Fab>\r\n            <Button\r\n                variant='contained'\r\n                color='success'\r\n                onClick={() => setIsOut(prev => !prev)}\r\n                sx={{ textTransform: 'capitalize' }}\r\n                startIcon={<Visibility />}\r\n            >\r\n                {isOut ? 'show stderr' : 'show stdout'}\r\n            </Button>\r\n            <pre id='out-pre' style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'flex-start',\r\n                margin: '1rem',\r\n                fontSize: '0.6rem'\r\n            }}>\r\n                {isOut ?\r\n                    [...stdout].reverse().map(txt => (\r\n                        <div key={txt.id}>{txt.msg}</div>\r\n                    )) :\r\n                    stderr.map(txt => (\r\n                        <div key={txt.id}>{txt.msg}</div>\r\n                    ))\r\n                }\r\n            </pre>\r\n            <div ref={endRef} aria-hidden />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst useFetchServerLogs = (setLoading, setError, setStderr, setStdout, setReColorToken) => {\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setError(undefined);\r\n        fetch(\r\n            `${SERVER_LINK}/api/experimental/logs`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            }\r\n        )\r\n            .then(async response => {\r\n                if (response.ok) return response.json();\r\n                const json = await response.json();\r\n                return await Promise.reject(json);\r\n            })\r\n            .then(res => {\r\n                setStdout(res.stdoutTxt.trim().split('\\n').map(txt => ({ msg: txt, id: v4() })));\r\n                setStderr(res.stderrTxt.trim().split('\\n').map(txt => ({ msg: txt, id: v4() })));\r\n                setReColorToken(prev => !prev);\r\n            })\r\n            .catch(setError)\r\n            .finally(() => setLoading(false))\r\n    }, [setLoading, setError, setStderr, setStdout, setReColorToken]);\r\n}\r\n\r\nconst useColorTokens = dependency => {\r\n    useEffect(() => {\r\n        // setting timeout so that this process don't block rendering\r\n        const timeoutId = setTimeout(() => {\r\n            const outPre = document.getElementById('out-pre');\r\n            if (!outPre) return;\r\n            // tokens: [searchKey, className, regexFlags]\r\n            outPre.childNodes.forEach(ele => {\r\n                if (ele.getAttribute(\"tokenized\") === \"ok\") return;\r\n                ele.innerHTML = tokenize(ele.innerHTML);\r\n                ele.setAttribute(\"tokenized\", \"ok\");\r\n            });\r\n        }, 10);\r\n        return () => clearTimeout(timeoutId);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, dependency);\r\n}\r\n\r\nconst tokenize = innerHTML => {\r\n    tokens.forEach(tokenDetail => (\r\n        innerHTML = innerHTML.replace(new RegExp(tokenDetail[0], tokenDetail[2]), `<span class='token token-${tokenDetail[1]}'>${tokenDetail[0]}</span>`)\r\n    ));\r\n    const timeVar = innerHTML.match('[0-9]+/[0-9]+/[0-9]+, [0-9]+:[0-9]+:[0-9]+ [a-zA-Z][a-zA-Z]');\r\n    timeVar && (innerHTML = innerHTML.replace(timeVar[0], `<span class='token-time'>${timeVar[0]}</span>`));\r\n    return innerHTML;\r\n}\r\n\r\nexport default ServerLogs;\r\n"],"names":["tokens","useFetchServerLogs","setLoading","setError","setStderr","setStdout","setReColorToken","useEffect","undefined","fetch","SERVER_LINK","headers","method","credentials","then","response","ok","json","Promise","reject","res","stdoutTxt","trim","split","map","txt","msg","id","v4","stderrTxt","prev","catch","finally","useColorTokens","dependency","timeoutId","setTimeout","outPre","document","getElementById","childNodes","forEach","ele","getAttribute","innerHTML","tokenize","setAttribute","clearTimeout","tokenDetail","replace","RegExp","timeVar","match","loginState","useSelector","state","auth","useState","loading","error","stdout","stderr","reColorToken","isOut","setIsOut","endRef","useRef","isAdmin","newSocket","io","query","on","close","username","JSON","stringify","Fragment","Fab","onClick","current","scrollIntoView","style","position","bottom","right","opacity","size","color","KeyboardArrowDown","Button","variant","sx","textTransform","startIcon","Visibility","display","flexDirection","alignItems","margin","fontSize","reverse","ref"],"sourceRoot":""}