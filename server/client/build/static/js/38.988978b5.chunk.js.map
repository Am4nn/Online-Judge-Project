{"version":3,"file":"static/js/38.988978b5.chunk.js","mappings":"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","sources":["webpack://client/./src/pages/Notes/Note/Note.module.css?db37","pages/Notes/Note/Note.js","pages/Notes/AddNote/AddNote.js","webpack://client/./src/pages/Notes/ViewNote/ViewNote.module.css?e4d4","pages/Notes/ViewNote/ViewNote.js","pages/Notes/EditNote/EditNote.js","webpack://client/./src/pages/Notes/Notes.module.css?991b","pages/Notes/Notes.js","pages/Question/Editor/CodeEditorv3.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"note\":\"Note_note__1zm-A\",\"title\":\"Note_title__yCf6+\",\"desc\":\"Note_desc__NzxhC\",\"ftr\":\"Note_ftr__BNTLf\"};","import React, { Fragment } from 'react';\r\nimport classes from './Note.module.css';\r\n\r\nconst Note = ({ note, setOpenViewModal, setViewNote, refreshNotesList }) => {\r\n\r\n    let { title, codeid, desc, username, access, editable, edited, deleted } = note;\r\n    title = title || \"Title\";\r\n    codeid = codeid || null;\r\n    desc = desc || \"Description\";\r\n    editable = editable || false;\r\n    username = username || \"guest\";\r\n\r\n    const noteClickHandler = () => {\r\n        if ((!codeid || edited || deleted)) return;\r\n        setViewNote(note);\r\n        setOpenViewModal(true);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.note} style={(edited || deleted) && { cursor: 'default' }} onClick={noteClickHandler}>\r\n            {(edited || deleted) ?\r\n                <Fragment>\r\n                    <div style={{ fontSize: '2.4rem', fontWeight: 700, color: 'hsl(0, 60%, 50%)' }}>{deleted ? \"Deleted\" : \"Edited\"}</div>\r\n                    <div style={{ fontSize: '0.8rem', color: 'hsla(0, 40%, 50%,0.8)', margin: 'unset', lineHeight: '0.9rem' }}>{deleted ? \"This note has been Removed !\" : \"An Edit has been made to this note\"}</div>\r\n                    <div style={{ fontSize: '0.8rem', color: 'hsla(0, 40%, 50%,0.8)', margin: 'unset', lineHeight: '0.9rem' }}>\r\n                        <span style={{\r\n                            zIndex: 100, position: 'relative',\r\n                            color: 'blue', textDecoration: 'underline',\r\n                            fontWeight: 500, cursor: 'pointer', marginRight: '3px'\r\n                        }}\r\n                            onClick={refreshNotesList} >\r\n                            Refresh\r\n                        </span>\r\n                        this page to see changes !\r\n                    </div>\r\n                </Fragment>\r\n                :\r\n                < Fragment >\r\n                    <h4 className={classes.title}>{title}</h4>\r\n                    <p className={classes.desc}>{desc}</p>\r\n                </Fragment>\r\n            }\r\n            <div className={classes.ftr}>\r\n                <span>{username}</span>\r\n                <span>{access} / {editable ? \"editable\" : \"read-only\"}</span>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Note;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    FormControl, FormControlLabel,\r\n    DialogContent, DialogTitle,\r\n    Button, styled, TextField,\r\n    Dialog, DialogActions,\r\n    InputLabel, MenuItem,\r\n    Select, Switch\r\n} from '@mui/material';\r\nimport { Box } from '@mui/system';\r\n\r\nimport CodeEditorv3 from '../../Question/Editor/CodeEditorv3';\r\nimport Note from '../Note/Note';\r\nimport { SERVER_LINK } from '../../../dev-server-link';\r\nimport { messageActions } from '../../../store/Message/message-slice';\r\n\r\nconst AddNote = ({ openModal, setOpenModal, isMobile, setReloadNeeded, SlideTransition }) => {\r\n\r\n    const { username, isAdmin, isGuest } = useSelector(state => state.auth);\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [access, setAccess] = useState('public');\r\n    const [editable, setEditable] = useState(false);\r\n    const [code, setCode] = useState('');\r\n    const [language, setLanguage] = useState('c');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const resetStates = () => {\r\n        setTitle('');\r\n        setDesc('');\r\n        setAccess('public');\r\n        setEditable(false);\r\n        setCode('');\r\n    }\r\n\r\n    const handleClose = () => {\r\n        resetStates();\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        if (!title || !desc) {\r\n            dispatch(messageActions.set({ type: 'error', message: \"title and description can't be empty\", description: 'title and description are required so please fill both !!!' }));\r\n            return;\r\n        }\r\n\r\n        handleClose();\r\n        dispatch(messageActions.set({ type: 'info', message: 'Adding New Note...' }));\r\n        // send request to server to add note with given info and credentials\r\n        fetch(\r\n            `${SERVER_LINK}/api/notes`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify({ title, desc, code, language, access, editable }),\r\n                credentials: 'include'\r\n            }\r\n        )\r\n            .then(async response => {\r\n                const res = await response.json();\r\n                if (response.ok) return res\r\n                return Promise.reject(res);\r\n            })\r\n            .then(response => {\r\n                dispatch(messageActions.set({ type: 'success', message: 'Added Note Successfully !', description: JSON.stringify(response) }));\r\n                setReloadNeeded(true);\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                dispatch(messageActions.set({ type: 'error', message: 'Adding Note Unsuccessful!', description: JSON.stringify(err) }));\r\n            })\r\n    }\r\n\r\n    const descriptionElementRef = useRef(null);\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [openModal]);\r\n\r\n    useEffect(() => {\r\n        if (access === 'private') setEditable(false);\r\n    }, [access]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={() => setOpenModal(false)}\r\n            scroll='paper'\r\n            aria-labelledby=\"Add-Note\"\r\n            fullWidth\r\n            maxWidth={!isMobile && 'sm'}\r\n            fullScreen={isMobile}\r\n            TransitionComponent={SlideTransition}\r\n        >\r\n            <DialogTitle style={{ textTransform: 'capitalize' }}>Add Note</DialogTitle>\r\n            <DialogContent dividers ref={descriptionElementRef}>\r\n                <div style={{ display: 'flex', justifyContent: 'center', position: 'relative' }}>\r\n                    <span style={{ position: 'absolute', top: '-0.8rem', left: '0', fontWeight: 600, opacity: 0.6 }}>Preview :</span>\r\n                    <Note note={{ title, desc, access, editable, username }} />\r\n                </div>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { mb: 1.3, width: '85%' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <TextField\r\n                        required\r\n                        id=\"title-textarea\"\r\n                        label=\"Title\"\r\n                        placeholder=\"Write max 20 characters\"\r\n                        value={title}\r\n                        onChange={event => setTitle(event.target.value)}\r\n                    />\r\n                    <TextField\r\n                        id=\"desc-textarea\"\r\n                        label=\"Description\"\r\n                        placeholder=\"Write max 200 characters\"\r\n                        multiline\r\n                        value={desc}\r\n                        onChange={event => setDesc(event.target.value)}\r\n                    />\r\n                    <FormControl sx={{ width: '85%' }}>\r\n                        <InputLabel id=\"access-input-label\">Access</InputLabel>\r\n                        <Select\r\n                            labelId=\"access-input-label\"\r\n                            id=\"access-input\"\r\n                            label=\"Access\"\r\n                            value={access}\r\n                            onChange={event => setAccess(event.target.value)}\r\n                        >\r\n                            {isAdmin && <MenuItem value='global'>Global</MenuItem>}\r\n                            <MenuItem value='public'>Public</MenuItem>\r\n                            {!isGuest && <MenuItem value='private'>Private</MenuItem>}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    {(access !== 'private') ?\r\n                        <div>\r\n                            <FormControlLabel\r\n                                label=\"Editable (By Anyone)\"\r\n                                control={<CustomSwitch checked={editable} onChange={event => setEditable(event.target.checked)} />}\r\n                                labelPlacement='start'\r\n                            />\r\n                            <span style={{ marginLeft: '0.9rem', fontWeight: 600, opacity: 0.6 }}>{editable ? \"Yes\" : \"No\"} </span>\r\n                        </div>\r\n                        :\r\n                        <div style={{ fontSize: '0.85rem', fontWeight: 600, opacity: 0.6, margin: '0.6rem 0 0.6rem 0' }}>\r\n                            Private Note can't be made Editable by everyone (as only you can view/edit)\r\n                        </div>\r\n                    }\r\n\r\n                    <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between' }}>\r\n                        <div style={{ fontWeight: 600, fontSize: '1.1rem', opacity: 0.7 }}>Enter Code : </div>\r\n                        <FormControl>\r\n                            <InputLabel id=\"changeLang-select-label\">Language</InputLabel>\r\n                            <Select\r\n                                labelId=\"changeLang-select-label\"\r\n                                id=\"changeLang-select\"\r\n                                value={language}\r\n                                label=\"Language\"\r\n                                style={{ width: '8em', height: '2.5em' }}\r\n                                onChange={e => setLanguage(e.target.value)}\r\n                            >\r\n                                <MenuItem value={'c'}>C</MenuItem>\r\n                                <MenuItem value={'cpp'}>Cpp</MenuItem>\r\n                                <MenuItem value={'py'}>Python</MenuItem>\r\n                                <MenuItem value={'java'}>JAVA</MenuItem>\r\n                                <MenuItem value={'js'}>JS</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <CodeEditorv3\r\n                        code={code}\r\n                        setCode={setCode}\r\n                        language={language}\r\n                        fontSize={13}\r\n                    />\r\n                </Box>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button style={{ textTransform: 'capitalize' }} variant='outlined' color='secondary' onClick={handleAdd}>Add</Button>\r\n                <Button style={{ textTransform: 'capitalize' }} variant='outlined' onClick={handleClose}>Cancel</Button>\r\n            </DialogActions>\r\n        </Dialog >\r\n    );\r\n}\r\n\r\nconst CustomSwitch = styled(Switch)(({ theme }) => ({\r\n    padding: 8,\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 22 / 2,\r\n        '&:before, &:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            top: '50%',\r\n            transform: 'translateY(-50%)',\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        '&:before': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n            left: 12,\r\n        },\r\n        '&:after': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n            right: 12,\r\n        },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: 'none',\r\n        width: 16,\r\n        height: 16,\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nexport default AddNote;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"ViewNote_body__+CDLN\",\"response\":\"ViewNote_response__h-VhU\",\"resHead\":\"ViewNote_resHead__Vhkwn\",\"resTextHead\":\"ViewNote_resTextHead__eYJO6\"};","import React, { Fragment, useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    Button, DialogContentText,\r\n    Fab, Fade, IconButton, Tooltip,\r\n    Zoom, Dialog, DialogActions,\r\n    DialogContent, DialogTitle, TextField\r\n} from '@mui/material';\r\nimport {\r\n    Check, ContentCopy,\r\n    Delete, Edit, Share\r\n} from '@mui/icons-material';\r\nimport { Box } from '@mui/system';\r\nimport moment from 'moment';\r\nimport copy from 'copy-to-clipboard';\r\nimport Note from '../Note/Note';\r\nimport classes from './ViewNote.module.css';\r\nimport { SERVER_LINK } from '../../../dev-server-link';\r\nimport CodeEditorv3 from '../../Question/Editor/CodeEditorv3';\r\nimport { messageActions } from '../../../store/Message/message-slice';\r\nimport LoadingSpinner from './../../../compenents/LoadingSpinner/LoadingSpinner';\r\n\r\nconst ViewNote = ({ openModal, setOpenModal, viewNote, setEditNote, setOpenEditModal, isMobile, markEditOrDelete, setReloadNeeded, SlideTransition }) => {\r\n\r\n    const { username, title, desc, access, editable, codeid, _id: noteid, lastModifiedAt } = viewNote;\r\n\r\n    const dispatch = useDispatch();\r\n    const { username: auth_username, isAdmin, isGuest } = useSelector(state => state.auth);\r\n\r\n    const [code, setCode] = useState('');\r\n    const [language, setLanguage] = useState('c');\r\n    const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n    const [copied, setCopied] = useState(false);\r\n    if (copied === true) setTimeout(() => setCopied(false), 2500);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const handleClose = () => {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const descriptionElementRef = useRef(null);\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [openModal]);\r\n\r\n    useFetchCodeForNote(codeid, noteid, setCode, setLanguage, setLoading);\r\n\r\n    const copyHandler = () => {\r\n        const result = copy(code);\r\n        const type = result ? 'success' : 'error';\r\n        const message = result ? 'Code copied successfully !' : 'There are some errors copying the code !';\r\n\r\n        dispatch(messageActions.set({ type, message }));\r\n        setCopied(true);\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        setEditNote({ ...viewNote, code, language });\r\n        setOpenEditModal(true);\r\n        setOpenModal(false);\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setOpenDeleteModal(false);\r\n        setOpenModal(false);\r\n\r\n        // Make a request to server with credentials to delete perticular note\r\n        fetch(\r\n            `${SERVER_LINK}/api/notes/${noteid}`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'DELETE',\r\n                credentials: 'include'\r\n            }\r\n        )\r\n            .then(async response => {\r\n                const res = await response.json();\r\n                if (response.ok) return res\r\n                return Promise.reject(res);\r\n            })\r\n            .then(response => {\r\n                dispatch(messageActions.set({ type: 'success', message: 'Deleted Note Successfully !', description: JSON.stringify(response) }));\r\n                markEditOrDelete(noteid, 'deleted');\r\n                setReloadNeeded(true);\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                dispatch(messageActions.set({ type: 'error', message: 'Deleting Note Unsuccessful!', description: JSON.stringify(err) }));\r\n            })\r\n    }\r\n\r\n    const handleShare = () => {\r\n        const link = window.location.href;\r\n        const result = copy(link);\r\n        let type = '';\r\n        let message = '';\r\n        let description = '';\r\n\r\n        if (!result) {\r\n            type = 'error'; message = \"There are some errors copying the Note's Link !\";\r\n            description = 'Try using another browser !';\r\n        } else if (access === 'private') {\r\n            type = 'warning'; message = \"Link copied but someone else can't open it as its a Private Note\";\r\n            description = 'Make this Note public to make it share-able !';\r\n        } else {\r\n            type = 'success'; message = 'Link to the Note copied successfully !';\r\n            description = `Link to Note : ${link}`;\r\n        }\r\n\r\n        dispatch(messageActions.set({ type, message, description }));\r\n    }\r\n\r\n    const [codeSubmittingState, setCodeSubmittingState] = useState('not-initialized');\r\n    const [response, setResponse] = useState({ status: 'pending' });\r\n    const [input, setInput] = useState('');\r\n    const endRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setCode('');\r\n        setInput('');\r\n        setLoading(true);\r\n        setCodeSubmittingState('not-initialized');\r\n        setResponse({ status: 'pending' });\r\n    }, [noteid]);\r\n\r\n    const intervalID = useRef(null);\r\n    const stopInterval = useCallback(() => {\r\n        if (intervalID.current) {\r\n            clearInterval(intervalID.current);\r\n            intervalID.current = null;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (intervalID.current)\r\n            setCodeSubmittingState('not-initialized');\r\n        stopInterval();\r\n    }, [openModal, stopInterval]);\r\n\r\n    const handleCompile = async event => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (codeSubmittingState === 'submitting') return;\r\n\r\n        setCodeSubmittingState('submitting');\r\n        setResponse({ msg: 'Queueing...', status: 'pending' });\r\n\r\n        if (endRef.current)\r\n            endRef.current.scrollIntoView({ behavior: 'smooth' });\r\n\r\n        try {\r\n            const query = await fetch(\r\n                `${SERVER_LINK}/api/explore/codeExecutor`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                    body: JSON.stringify({ code, language, input })\r\n                }\r\n            );\r\n            const queryData = await query.json();\r\n            setResponse(queryData);\r\n\r\n            if (query.ok) {\r\n                intervalID.current = setInterval(async () => {\r\n                    const response = await fetch(\r\n                        `${SERVER_LINK}/api/explore/status/${queryData.queryId}`,\r\n                        {\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            method: 'GET'\r\n                        }\r\n                    );\r\n                    const data = await response.json();\r\n                    if (intervalID.current && !response.ok) {\r\n                        stopInterval();\r\n                        setCodeSubmittingState('submitted');\r\n                        setResponse(data);\r\n                    }\r\n                    else if (intervalID.current && data.status !== 'pending') {\r\n                        stopInterval();\r\n                        setCodeSubmittingState('submitted');\r\n                        setResponse({ ...data.output, status: data.status });\r\n                    }\r\n                    // else console.log('status -> pending');\r\n                }, 1000);\r\n            }\r\n            else {\r\n                setCodeSubmittingState('submitted');\r\n            }\r\n        } catch (error) {\r\n            setResponse({ msg: 'caught errors while sending code to server for getting verdict', serverError: JSON.stringify(error) });\r\n            setCodeSubmittingState('submitted');\r\n        }\r\n    }\r\n\r\n    const isEditable = (isAdmin || (access !== 'private' && editable) || (!isGuest && (auth_username === username)));\r\n    const isDeleteable = (isAdmin || (!isGuest && (auth_username === username)));\r\n\r\n    return (\r\n        <Fragment>\r\n            <ConfirmationDialog open={openDeleteModal} setOpen={setOpenDeleteModal} handleDeleteOperation={handleDelete} />\r\n            <Dialog\r\n                open={openModal}\r\n                onClose={() => setOpenModal(false)}\r\n                scroll='paper'\r\n                aria-labelledby=\"View-Note\"\r\n                fullWidth\r\n                maxWidth={!isMobile && 'md'}\r\n                fullScreen={isMobile}\r\n                TransitionComponent={SlideTransition}\r\n            >\r\n                <DialogTitle style={{ textTransform: 'capitalize' }}>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <span>View Note</span>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <Tooltip TransitionComponent={Zoom} title='Share' placement='bottom'>\r\n                                <Box>\r\n                                    <Fab onClick={handleShare} size=\"small\" color=\"success\" aria-label=\"share\">\r\n                                        <Share />\r\n                                    </Fab>\r\n                                </Box>\r\n                            </Tooltip>\r\n                            <Tooltip TransitionComponent={Zoom} title={(!isEditable) ? \"Can't edit this note\" : 'Edit'} placement='bottom'>\r\n                                <Box>\r\n                                    <Fab onClick={handleEdit} size=\"small\" color=\"info\" aria-label=\"edit\" sx={{ ml: 1 }} disabled={(!isEditable)}>\r\n                                        <Edit />\r\n                                    </Fab>\r\n                                </Box>\r\n                            </Tooltip>\r\n                            <Tooltip TransitionComponent={Zoom} title={(!isDeleteable) ? \"Can't delete this note\" : 'Delete'} placement='bottom'>\r\n                                <Box>\r\n                                    <Fab onClick={() => setOpenDeleteModal(true)} size=\"small\" color=\"warning\" aria-label=\"delete\" sx={{ ml: 1 }} disabled={(!isDeleteable)}>\r\n                                        <Delete />\r\n                                    </Fab>\r\n                                </Box>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent dividers ref={descriptionElementRef}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', position: 'relative' }}>\r\n                        <span style={{ position: 'absolute', top: '-0.8rem', left: '0', fontWeight: 600, opacity: 0.6 }}>Preview :</span>\r\n                        <Note note={{ title, desc, access, editable, username }} />\r\n                    </div>\r\n                    <Box\r\n                        component=\"form\"\r\n                        sx={{\r\n                            '& .MuiTextField-root': { mb: 1.3, width: '85%' },\r\n                        }}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between' }}>\r\n                            <div>\r\n                                <Tooltip TransitionComponent={Zoom} title={copied ? 'Code Copied' : 'Copy Code'} placement='right'>\r\n                                    <IconButton\r\n                                        onClick={copyHandler}\r\n                                        aria-label={copied ? 'Code Copied' : 'Copy Code'}\r\n                                    >\r\n                                        {copied ? <Check /> : <ContentCopy />}\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div style={{ fontWeight: 600, fontSize: '1.1rem', opacity: 0.7 }}>Language : {loading ? '...' : language}</div>\r\n                        </div>\r\n                        <CodeEditorv3\r\n                            code={code}\r\n                            setCode={setCode}\r\n                            language={language}\r\n                            fontSize={15}\r\n                            isReadOnly\r\n                            isLoading={loading}\r\n                        />\r\n                    </Box>\r\n\r\n                    <TextField\r\n                        id=\"input-textarea\"\r\n                        placeholder=\"Put Multiline Input here\"\r\n                        label='Any Input ?'\r\n                        color='secondary'\r\n                        fullWidth\r\n                        multiline\r\n                        maxRows='3'\r\n                        variant='outlined'\r\n                        sx={{ marginTop: '2rem' }}\r\n                        value={input}\r\n                        onChange={event => setInput(event.target.value)}\r\n                    />\r\n                    {codeSubmittingState !== 'not-initialized' && (\r\n                        <Box className={classes.body}>\r\n                            <div style={{ \"--col\": (response.status === 'success' ? 127 : 0) }} className={classes.response}>\r\n                                {response.msg &&\r\n                                    <div className={classes.resTextHead}>\r\n                                        <div className={classes.resHead}>Msg: </div>\r\n                                        <div>{response.msg}</div>\r\n                                    </div>\r\n                                }\r\n                                {response.stdout &&\r\n                                    <div className={classes.resTextHead}>\r\n                                        <div className={classes.resHead}>STDOUT: </div>\r\n                                        <div>{response.stdout}</div>\r\n                                    </div>\r\n                                }\r\n                                {response.stderr &&\r\n                                    <div className={classes.resTextHead}>\r\n                                        <div className={classes.resHead}>STDERR: </div>\r\n                                        <div>{response.stderr}</div>\r\n                                    </div>\r\n                                }\r\n                                {response.error &&\r\n                                    <div className={classes.resTextHead}>\r\n                                        <div className={classes.resHead}>Error: </div>\r\n                                        <div>{JSON.stringify(response.error)}</div>\r\n                                    </div>\r\n                                }\r\n                                {response.serverError &&\r\n                                    <div className={classes.resTextHead}>\r\n                                        <div className={classes.resHead}>ServerError: </div>\r\n                                        <div>{response.serverError.toString()}</div>\r\n                                    </div>\r\n                                }\r\n                                {response.status === 'pending' &&\r\n                                    <div style={{ marginTop: '2rem', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                        <LoadingSpinner />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </Box>\r\n                    )}\r\n                    <div ref={endRef} style={{ marginTop: '18rem' }} />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <div style={{ width: '100%', padding: '6px 8px', textTransform: 'capitalize' }}>\r\n                        <DialogContentText>\r\n                            Last Modified: {moment(lastModifiedAt).fromNow()}\r\n                        </DialogContentText>\r\n                    </div>\r\n                    <Button style={{ textTransform: 'capitalize' }} variant='outlined' color='secondary' onClick={handleCompile}>Compile</Button>\r\n                    <Button style={{ textTransform: 'capitalize' }} variant='outlined' onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog >\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst ConfirmationDialog = ({ open, setOpen, handleDeleteOperation }) => {\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-delete-note\"\r\n            TransitionComponent={Fade}\r\n        >\r\n            <DialogTitle>Delete Note</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Are you sure you want to delete this note ?\r\n                    <br />\r\n                    (Once Note is Delete can't be recovered !)\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleDeleteOperation}>Delete</Button>\r\n                <Button onClick={handleClose} autoFocus>Cancel</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nconst useFetchCodeForNote = (codeid, noteid, setCode, setLanguage, setLoading) => {\r\n    useEffect(() => {\r\n        if (!codeid) return;\r\n\r\n        // make request to server to fetch code with _id:codeid\r\n        fetch(\r\n            `${SERVER_LINK}/api/notes/${codeid}?noteid=${noteid}`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            }\r\n        )\r\n            .then(async response => {\r\n                const res = await response.json();\r\n                if (response.ok) return res;\r\n                return Promise.reject(res);\r\n            })\r\n            .then(response => {\r\n                setCode(response.code);\r\n                setLanguage(response.language);\r\n            })\r\n            .catch(error => { setCode(JSON.stringify(error)) })\r\n            .finally(() => setLoading(false))\r\n    }, [codeid, noteid, setCode, setLanguage, setLoading]);\r\n}\r\n\r\n\r\nexport default ViewNote;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { FormControl, FormControlLabel, InputLabel, MenuItem, Select, Switch, TextField } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { styled } from '@mui/material/styles';\r\nimport Note from '../Note/Note';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CodeEditorv3 from '../../Question/Editor/CodeEditorv3';\r\nimport { messageActions } from '../../../store/Message/message-slice';\r\nimport { SERVER_LINK } from '../../../dev-server-link';\r\n\r\n\r\nconst EditNote = ({ openModal, setOpenModal, editNote, isMobile, markEditOrDelete, setReloadNeeded, SlideTransition }) => {\r\n\r\n    const {\r\n        username, title: title_,\r\n        desc: desc_, access: access_,\r\n        editable: editable_, code: code_,\r\n        language: language_, _id\r\n    } = editNote;\r\n\r\n    const dispatch = useDispatch();\r\n    const { username: realUsername, isAdmin, isGuest } = useSelector(state => state.auth);\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [access, setAccess] = useState('public');\r\n    const [editable, setEditable] = useState(false);\r\n    const [language, setLanguage] = useState('cpp');\r\n    const [code, setCode] = useState('');\r\n\r\n    useEffect(() => {\r\n        title_ && setTitle(title_);\r\n        desc_ && setDesc(desc_);\r\n        access_ && setAccess(access_);\r\n        editable_ && setEditable(editable_);\r\n        language_ && setLanguage(language_);\r\n        code_ && setCode(code_);\r\n    }, [title_, desc_, access_, editable_, language_, code_, dispatch]);\r\n\r\n    const handleClose = () => {\r\n        setOpenModal(false);\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if (!title || !desc) {\r\n            dispatch(messageActions.set({ type: 'error', message: \"title and description can't be empty\", description: 'title and description are required so please fill both !!!' }));\r\n            return;\r\n        }\r\n\r\n        handleClose();\r\n        dispatch(messageActions.set({ type: 'info', message: 'Editing the Note...' }));\r\n\r\n        // send request to server to edit note with given info and credentials\r\n        fetch(\r\n            `${SERVER_LINK}/api/notes/${_id}`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'PUT',\r\n                body: JSON.stringify({ title, desc, code, language, access, editable }),\r\n                credentials: 'include'\r\n            }\r\n        )\r\n            .then(async response => {\r\n                const res = await response.json();\r\n                if (response.ok) return res\r\n                return Promise.reject(res);\r\n            })\r\n            .then(response => {\r\n                dispatch(messageActions.set({ type: 'success', message: 'Edited Note Successfully !', description: JSON.stringify(response) }));\r\n                setReloadNeeded(true);\r\n                markEditOrDelete(_id, 'edited');\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                dispatch(messageActions.set({ type: 'error', message: 'Editing Note Unsuccessful!', description: JSON.stringify(err) }));\r\n            })\r\n    }\r\n\r\n    const descriptionElementRef = useRef(null);\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [openModal]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={handleClose}\r\n            scroll='paper'\r\n            aria-labelledby=\"Edit-Note\"\r\n            fullWidth\r\n            maxWidth={!isMobile && 'sm'}\r\n            fullScreen={isMobile}\r\n            TransitionComponent={SlideTransition}\r\n        >\r\n            <DialogTitle style={{ textTransform: 'capitalize' }}>Edit Note</DialogTitle>\r\n            <DialogContent dividers ref={descriptionElementRef}>\r\n                <div style={{ display: 'flex', justifyContent: 'center', position: 'relative' }}>\r\n                    <span style={{ position: 'absolute', top: '-0.8rem', left: '0', fontWeight: 600, opacity: 0.6 }}>Preview :</span>\r\n                    <Note note={{ title, desc, access, editable, username }} />\r\n                </div>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { mb: 1.3, width: '85%' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <TextField\r\n                        required\r\n                        id=\"title-textarea\"\r\n                        label=\"Title\"\r\n                        placeholder=\"Write max 20 characters\"\r\n                        value={title}\r\n                        onChange={event => setTitle(event.target.value)}\r\n                    />\r\n                    <TextField\r\n                        id=\"desc-textarea\"\r\n                        label=\"Description\"\r\n                        placeholder=\"Write max 200 characters\"\r\n                        multiline\r\n                        value={desc}\r\n                        onChange={event => setDesc(event.target.value)}\r\n                    />\r\n\r\n                    {(isAdmin || realUsername === username) &&\r\n                        <FormControl sx={{ width: '85%' }}>\r\n                            <InputLabel id=\"access-input-label\">Access</InputLabel>\r\n                            <Select\r\n                                labelId=\"access-input-label\"\r\n                                id=\"access-input\"\r\n                                label=\"Access\"\r\n                                value={access}\r\n                                onChange={event => setAccess(event.target.value)}\r\n                            >\r\n                                {isAdmin && <MenuItem value='global'>Global</MenuItem>}\r\n                                <MenuItem value='public'>Public</MenuItem>\r\n                                {(isAdmin || access === 'private' || realUsername === username) && !isGuest && <MenuItem value='private'>Private</MenuItem>}\r\n                            </Select>\r\n                        </FormControl>\r\n                    }\r\n\r\n                    {(access !== 'private') ?\r\n                        <div>\r\n                            <FormControlLabel\r\n                                label=\"Editable (By Anyone)\"\r\n                                control={<CustomSwitch checked={editable} onChange={event => setEditable(event.target.checked)} />}\r\n                                labelPlacement='start'\r\n                            />\r\n                            <span style={{ marginLeft: '0.9rem', fontWeight: 600, opacity: 0.6 }}>{editable ? \"Yes\" : \"No\"} </span>\r\n                        </div>\r\n                        :\r\n                        <div style={{ fontSize: '0.85rem', fontWeight: 600, opacity: 0.6, margin: '0.6rem 0 0.6rem 0' }}>\r\n                            Private Note can't be made Editable by everyone (as only you can view/edit)\r\n                        </div>\r\n                    }\r\n\r\n                    <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between' }}>\r\n                        <div style={{ fontWeight: 600, fontSize: '1.1rem', opacity: 0.7 }}>Enter Code : </div>\r\n                        <FormControl>\r\n                            <InputLabel id=\"changeLang-select-label\">Language</InputLabel>\r\n                            <Select\r\n                                labelId=\"changeLang-select-label\"\r\n                                id=\"changeLang-select\"\r\n                                value={language}\r\n                                label=\"Language\"\r\n                                style={{ width: '8em', height: '2.5em' }}\r\n                                onChange={e => setLanguage(e.target.value)}\r\n                            >\r\n                                <MenuItem value={'c'}>C</MenuItem>\r\n                                <MenuItem value={'cpp'}>Cpp</MenuItem>\r\n                                <MenuItem value={'py'}>Python</MenuItem>\r\n                                <MenuItem value={'java'}>JAVA</MenuItem>\r\n                                <MenuItem value={'js'}>JS</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <CodeEditorv3\r\n                        code={code}\r\n                        setCode={setCode}\r\n                        language={language}\r\n                        fontSize={13}\r\n                    />\r\n                </Box>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button style={{ textTransform: 'capitalize' }} variant='outlined' color='secondary' onClick={handleSave}>Save</Button>\r\n                <Button style={{ textTransform: 'capitalize' }} variant='outlined' onClick={handleClose}>Cancel</Button>\r\n            </DialogActions>\r\n        </Dialog >\r\n    );\r\n}\r\n\r\nconst CustomSwitch = styled(Switch)(({ theme }) => ({\r\n    padding: 8,\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 22 / 2,\r\n        '&:before, &:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            top: '50%',\r\n            transform: 'translateY(-50%)',\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        '&:before': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n            left: 12,\r\n        },\r\n        '&:after': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n            right: 12,\r\n        },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: 'none',\r\n        width: 16,\r\n        height: 16,\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nexport default EditNote;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"head\":\"Notes_head__PxwPV\",\"noteList\":\"Notes_noteList__vMwKp\",\"addNoteFab\":\"Notes_addNoteFab__aHO+F\",\"adminModeFab\":\"Notes_adminModeFab__IAA1s\",\"searchNoteFab\":\"Notes_searchNoteFab__u+p7T\",\"container\":\"Notes_container__5IeH0\",\"ncLabel\":\"Notes_ncLabel__pnmDM\",\"noNote\":\"Notes_noNote__PQsTL\",\"red\":\"Notes_red__HdLv9\"};","import React, { forwardRef, Fragment, useCallback, useEffect, useState, useTransition } from 'react'\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Box } from '@mui/system';\r\nimport { Fab, InputBase, Slide, Tooltip, Zoom, useMediaQuery } from '@mui/material';\r\nimport { Cancel, NoteAdd, Search, SupervisedUserCircle, KeyboardArrowRight } from '@mui/icons-material'\r\n\r\nimport AddNote from './AddNote/AddNote';\r\nimport ViewNote from './ViewNote/ViewNote';\r\nimport EditNote from './EditNote/EditNote';\r\nimport { SERVER_LINK } from '../../dev-server-link';\r\nimport { messageActions } from '../../store/Message/message-slice';\r\nimport LoadingSpinner from '../../compenents/LoadingSpinner/LoadingSpinner';\r\nimport Note from './Note/Note';\r\nimport classes from './Notes.module.css';\r\n// import useDebounce from '../../hooks/useDebounce';\r\nimport useTimeout from './../../hooks/useTimeout';\r\n\r\n/*\r\n    Schema : _id, title, desc, codeid, username, access, editable, language\r\n    \r\n    title: Max 18 characters\r\n\r\n    codeid: It represent database _id for codes (if any)\r\n\r\n    language: c, cpp, js, java, python\r\n\r\n    access : global, public, private\r\n        global : It is submitted by admin and \r\n                 is shown on top and can/can't (depends on editable) be modified by anyone else than admin, \r\n                 and can be viewed by anyone.\r\n        public : It is submitted by any user/guest and\r\n                 is editable by anyone/none(depends on user to allow edit or not)\r\n                 and can be viewed by anyone.\r\n        private: It is submitted by loggedIn user and\r\n                 can only read/edited by that perticular user only.\r\n\r\n    editable: true/false\r\n        It represents if a public/global note is editable by any user/guest.\r\n        It won't matter if note is private (hence, there is no field like editable in private note).\r\n\r\n    *   Notes are only deletable by user that created the note and \r\n        if note is created by guest then anyone one can delete it\r\n        and admin can delete any note.\r\n*/\r\n\r\nconst SlideTransition = forwardRef((props, ref) => (\r\n    <Slide ref={ref} {...props} direction=\"up\" />\r\n));\r\n\r\nlet isFirstRender = true;\r\n\r\nconst Notes = () => {\r\n\r\n    const [allNotes, setAllNotes] = useState([]);\r\n    const [originalAllNotes, setOriginalAllNotes] = useState([]);\r\n\r\n    const [openAddModal, setOpenAddModal] = useState(false);\r\n\r\n    const [openViewModal, setOpenViewModal] = useState(false);\r\n    const [viewNote, setViewNote] = useState({});\r\n\r\n    const [openEditModal, setOpenEditModal] = useState(false);\r\n    const [editNote, setEditNote] = useState({});\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(undefined);\r\n    const [reloadNeeded, setReloadNeeded] = useState(false);\r\n    const [searchNoteQuery, setSearchNoteQuery] = useState('');\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [isAdminMode, setAdminMode] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const { loggedIn, username, isAdmin } = useSelector(state => state.auth);\r\n    const isMobile = useMediaQuery('(max-width:620px)');\r\n\r\n    useEffect(() => {\r\n        if (!isFirstRender || loading) return;\r\n        isFirstRender = false;\r\n        const querynoteid = searchParams.get(\"view\");\r\n        if (!querynoteid) return;\r\n        const foundNote = originalAllNotes.find(ele => ele._id === querynoteid);\r\n        if (!foundNote) {\r\n            dispatch(messageActions.set({\r\n                type: 'error',\r\n                message: \"The Note's Link you are accessing does not exists\",\r\n                description: 'There is a query string in url, which does not belong to any note, this may be due to : the note you are tying to access has been deleted or may be link in incomplete !'\r\n            }));\r\n            return;\r\n        }\r\n\r\n        setOpenViewModal(true);\r\n        setViewNote(foundNote);\r\n    }, [loading, searchParams, originalAllNotes, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (isFirstRender) return;\r\n        if (openViewModal) setSearchParams({ \"view\": viewNote._id });\r\n        else setSearchParams({});\r\n    }, [openViewModal, setSearchParams, viewNote]);\r\n\r\n\r\n    const markEditOrDelete = (_id, property) => {\r\n        setAllNotes(prev => {\r\n            const newNotes = prev.map(ele => {\r\n                if (ele._id === _id) {\r\n                    const newEle = { ...ele };\r\n                    newEle[property] = true;\r\n                    return newEle;\r\n                }\r\n                else return ele;\r\n            });\r\n            return newNotes;\r\n        });\r\n    }\r\n\r\n    /*\r\n    Make a request to server, with credentials and it will return an array \r\n    containing all global and public notes but also with private notes specific\r\n    to that credentials.\r\n    */\r\n    const fetchNotesFromServer = useCallback(() => {\r\n        setLoading(true);\r\n        fetch(\r\n            `${SERVER_LINK}/api/notes/allNotes${(isAdminMode) ? '?admin=true' : ''}`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            }\r\n        )\r\n            .then(async response => {\r\n                const res = await response.json();\r\n                if (response.ok) return res\r\n                return Promise.reject(res);\r\n            })\r\n            .then(response => { setAllNotes(response); setOriginalAllNotes(response); })\r\n            .catch(setError)\r\n            .finally(() => setLoading(false))\r\n    }, [isAdminMode]);\r\n\r\n    useEffect(() => {\r\n        fetchNotesFromServer();\r\n    }, [dispatch, fetchNotesFromServer]);\r\n\r\n    useEffect(() => {\r\n        dispatch(messageActions.set({\r\n            type: 'info',\r\n            message: 'Click on Notes to view their Code !',\r\n            description: 'If you click on a Note, you will be able to share, edit, or delete it. Alternatively, you can add a new note by clicking on the Add button !'\r\n        }));\r\n    }, [dispatch]);\r\n\r\n    const addNoteHandler = () => setOpenAddModal(true);\r\n\r\n    // const [isSearching] = useSearchNotes_Debounce({ searchNoteQuery, setAllNotes, originalAllNotes });\r\n    const [isSearching] = useSearchNotes_Transition({ searchNoteQuery, setAllNotes, originalAllNotes });\r\n\r\n    const refreshNotesList = () => {\r\n        setEditNote({});\r\n        setViewNote({});\r\n        setReloadNeeded(false);\r\n        fetchNotesFromServer();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* show loading while notes are being fetched ! */}\r\n            {loading && <LoadingSpinner />}\r\n            {!loading && error && (\r\n                <div>\r\n                    <div className='errorTemplate'>\r\n                        <div><span>Msg : </span>Wasn't able to connect to server check if your are not offline or server might not be working !</div>\r\n                        {error && <div><span>Error : </span>{JSON.stringify(error)}</div>}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {!error && (\r\n                <div className={classes.container}>\r\n                    <AddNote setSearchParams={setSearchParams} SlideTransition={SlideTransition} setReloadNeeded={setReloadNeeded} isMobile={isMobile} openModal={openAddModal} setOpenModal={setOpenAddModal} />\r\n                    <ViewNote setSearchParams={setSearchParams} SlideTransition={SlideTransition} setReloadNeeded={setReloadNeeded} markEditOrDelete={markEditOrDelete} isMobile={isMobile} openModal={openViewModal} setOpenModal={setOpenViewModal} setEditNote={setEditNote} setOpenEditModal={setOpenEditModal} viewNote={viewNote} />\r\n                    <EditNote setSearchParams={setSearchParams} SlideTransition={SlideTransition} setReloadNeeded={setReloadNeeded} markEditOrDelete={markEditOrDelete} isMobile={isMobile} openModal={openEditModal} setOpenModal={setOpenEditModal} editNote={editNote} />\r\n\r\n                    <Tools\r\n                        addNoteHandler={addNoteHandler}\r\n                        isAdmin={isAdmin}\r\n                        isAdminMode={isAdminMode}\r\n                        setAdminMode={setAdminMode}\r\n                    />\r\n\r\n                    <Heading\r\n                        refreshNotesList={refreshNotesList}\r\n                        reloadNeeded={reloadNeeded}\r\n                    />\r\n\r\n                    <SearchComponent\r\n                        searchNoteQuery={searchNoteQuery}\r\n                        setSearchNoteQuery={setSearchNoteQuery}\r\n                        isSearching={isSearching}\r\n                    />\r\n\r\n                    {!loading && (\r\n                        <NotesSection\r\n                            allNotes={allNotes}\r\n                            refreshNotesList={refreshNotesList}\r\n                            setViewNote={setViewNote}\r\n                            setOpenViewModal={setOpenViewModal}\r\n                            loggedIn={loggedIn}\r\n                            username={username}\r\n                            addNoteHandler={addNoteHandler}\r\n                        />\r\n                    )}\r\n\r\n                </div>\r\n            )}\r\n        </Fragment >\r\n    )\r\n};\r\n\r\nconst useSearchNotes_Transition = ({ searchNoteQuery, setAllNotes, originalAllNotes }) => {\r\n    const [isSearching, startTransition] = useTransition();\r\n    useEffect(() => {\r\n        startTransition(() => {\r\n            if (!searchNoteQuery) setAllNotes(originalAllNotes);\r\n            else setAllNotes(originalAllNotes.filter(note => (\r\n                note.title.toLowerCase().includes(searchNoteQuery.toLowerCase()) ||\r\n                note.desc.toLowerCase().includes(searchNoteQuery.toLowerCase())\r\n            )));\r\n        });\r\n    }, [searchNoteQuery, originalAllNotes, setAllNotes]);\r\n    return [isSearching];\r\n}\r\n\r\nconst useSearchNotes_Debounce = ({ searchNoteQuery, setAllNotes, originalAllNotes }) => {\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const { reset, clear } = useTimeout(() => {\r\n\r\n        if (!searchNoteQuery) setAllNotes(originalAllNotes);\r\n        else setAllNotes(originalAllNotes.filter(note => (\r\n            note.title.toLowerCase().includes(searchNoteQuery.toLowerCase()) ||\r\n            note.desc.toLowerCase().includes(searchNoteQuery.toLowerCase())\r\n        )));\r\n\r\n        setIsSearching(false);\r\n    }, 500);\r\n    useEffect(() => {\r\n        setIsSearching(true);\r\n        reset();\r\n    }, [searchNoteQuery, reset]);\r\n    useEffect(() => {\r\n        setIsSearching(false);\r\n        clear();\r\n    }, [clear]);\r\n    return [isSearching];\r\n}\r\n\r\nconst Tools = ({ addNoteHandler, isAdmin, isAdminMode, setAdminMode }) => {\r\n    const adminModeHandler = () => isAdmin ? setAdminMode(prev => !prev) : setAdminMode(false);\r\n    return (\r\n        <Fragment>\r\n            <Tooltip TransitionComponent={Zoom} title='Add Note' placement='bottom'>\r\n                <Fab onClick={addNoteHandler} className={classes.addNoteFab} aria-label='add-note'>\r\n                    <NoteAdd sx={{ fontSize: '1.7rem' }} />\r\n                </Fab>\r\n            </Tooltip>\r\n\r\n            {isAdmin &&\r\n                <Tooltip TransitionComponent={Zoom} title='Admin Mode' placement='bottom'>\r\n                    <Fab color='secondary' onClick={adminModeHandler} className={classes.adminModeFab} aria-label='admin-mode'>\r\n                        {isAdminMode ?\r\n                            <Cancel sx={{ fontSize: '2.4rem' }} /> :\r\n                            <SupervisedUserCircle sx={{ fontSize: '2.4rem' }} />\r\n                        }\r\n                    </Fab>\r\n                </Tooltip>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst Heading = ({ reloadNeeded, refreshNotesList }) => (\r\n    <Fragment>\r\n        <div className={classes.head}>Notes</div>\r\n        {reloadNeeded &&\r\n            <div style={{\r\n                fontSize: '1rem', color: 'hsla(0, 40%, 50%,0.8)',\r\n                margin: 'unset', position: 'relative', marginBottom: '0.5rem'\r\n            }}><span onClick={refreshNotesList} style={{\r\n                zIndex: 100, position: 'relative',\r\n                color: 'blue', textDecoration: 'underline',\r\n                fontWeight: 500, cursor: 'pointer'\r\n            }}>Refresh</span> this page to see changes !</div>\r\n        }\r\n    </Fragment>\r\n);\r\n\r\nconst SearchComponent = ({ searchNoteQuery, setSearchNoteQuery, isSearching }) => {\r\n    return (\r\n        <Box sx={{\r\n            position: 'relative',\r\n            borderRadius: '5px',\r\n            backgroundColor: 'rgba(0,0,0,0.16)',\r\n            transition: 'all 300ms ease-in-out',\r\n            '&:hover': {\r\n                backgroundColor: 'rgba(0,0,0,0.13)',\r\n            },\r\n            width: '75%',\r\n            display: 'flex',\r\n            marginBottom: '1rem',\r\n            marginTop: '0.5rem'\r\n        }}>\r\n            <Box sx={{\r\n                padding: '0 1rem',\r\n                height: '100%',\r\n                position: 'absolute',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <Search />\r\n            </Box>\r\n            <InputBase sx={{\r\n                color: 'inherit',\r\n                width: '100%',\r\n                '& .MuiInputBase-input': {\r\n                    padding: '0.7rem',\r\n                    paddingLeft: '3.5rem',\r\n                    width: '100%'\r\n                },\r\n            }}\r\n                placeholder=\"Search a note…\"\r\n                inputProps={{ 'aria-label': 'search a note' }}\r\n                onChange={event => setSearchNoteQuery(event.target.value)}\r\n                value={searchNoteQuery}\r\n            />\r\n            {isSearching && <span style={{ display: 'flex', alignItems: 'center', marginRight: '5px' }} className='spin' color='black' />}\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst NotesSection = ({ allNotes, refreshNotesList, setViewNote, setOpenViewModal, loggedIn, username, addNoteHandler }) => {\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.ncLabel}><span>Global Notes by Admin</span><KeyboardArrowRight fontSize='medium' /></div>\r\n            <div className={classes.noteList}>\r\n                {allNotes.filter(note => (note.access === 'global')).map(note =>\r\n                    <Note refreshNotesList={refreshNotesList} key={note._id} note={note} setViewNote={setViewNote} setOpenViewModal={setOpenViewModal} />\r\n                )}\r\n            </div>\r\n\r\n            <div className={classes.ncLabel}><span>Public Notes by Users/Guest</span></div>\r\n            <div className={classes.noteList}>\r\n                {allNotes.filter(note => (note.access === 'public')).map(note =>\r\n                    <Note refreshNotesList={refreshNotesList} key={note._id} note={note} setViewNote={setViewNote} setOpenViewModal={setOpenViewModal} />\r\n                )}\r\n            </div>\r\n\r\n            <div className={classes.ncLabel}>\r\n                {loggedIn ?\r\n                    <span>Private Notes by {username}</span> :\r\n                    <span className={classes.red}>To see Private Notes you must be Logged In !</span>\r\n                }\r\n            </div>\r\n            {loggedIn ?\r\n                <div className={classes.noteList}>\r\n                    {allNotes.filter(note => (note.access === 'private')).length === 0 ?\r\n                        <span className={classes.red + ' ' + classes.noNote}>You have not created any Private Note, <button onClick={addNoteHandler}>Make One</button></span> :\r\n                        allNotes.filter(note => (note.access === 'private')).map(note =>\r\n                            <Note refreshNotesList={refreshNotesList} key={note._id} note={note} setViewNote={setViewNote} setOpenViewModal={setOpenViewModal} />\r\n                        )}\r\n                </div>\r\n                : \"\"\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Notes;","import React, { Fragment } from 'react'\r\n\r\nimport AceEditor from 'react-ace'\r\n\r\nimport \"ace-builds/webpack-resolver\"\r\n\r\nimport 'ace-builds/src-noconflict/mode-javascript'\r\nimport 'ace-builds/src-noconflict/mode-c_cpp'\r\nimport 'ace-builds/src-noconflict/mode-java'\r\nimport 'ace-builds/src-noconflict/mode-python'\r\n\r\nimport 'ace-builds/src-noconflict/theme-monokai'\r\nimport 'ace-builds/src-noconflict/ext-language_tools'\r\n\r\nconst CodeEditorv3 = props => {\r\n\r\n    const { code, setCode, language, fontSize, isReadOnly = false, isLoading = false } = props;\r\n\r\n    let mode = 'c_cpp';\r\n    switch (language) {\r\n        case 'c':\r\n            mode = 'c_cpp';\r\n            break;\r\n        case 'cpp':\r\n            mode = 'c_cpp';\r\n            break;\r\n        case 'java':\r\n            mode = 'java';\r\n            break;\r\n        case 'py':\r\n            mode = 'python';\r\n            break;\r\n        case 'js':\r\n            mode = 'javascript';\r\n            break;\r\n        default:\r\n            mode = 'c_cpp';\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading && <div style={{ position: 'absolute', zIndex: 10, display: 'flex', alignItems: 'center', pointerEvents: 'none', translate: '0 1rem' }}>\r\n                <div className='spin' />\r\n                <span style={{ fontSize: '1.8rem', color: 'rgba(128, 128, 128, 0.8)', fontWeight: 500, marginLeft: '1rem' }}>Loading Code...</span>\r\n            </div>}\r\n            <AceEditor\r\n                placeholder=\"Enter your code here\"\r\n                mode={mode}\r\n                theme=\"monokai\"\r\n                name=\"editorv3\"\r\n                onLoad={() => {\r\n                    // console.log('loaded')\r\n                }}\r\n                onChange={value => setCode(value)}\r\n                fontSize={parseInt(fontSize)}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                readOnly={isReadOnly}\r\n                highlightActiveLine={true}\r\n                value={code}\r\n                width='100%'\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: false,\r\n                    showLineNumbers: true,\r\n                    tabSize: 4,\r\n                }}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CodeEditorv3;"],"names":["note","setOpenViewModal","setViewNote","refreshNotesList","title","codeid","desc","username","access","editable","edited","deleted","className","classes","style","cursor","onClick","Fragment","fontSize","fontWeight","color","margin","lineHeight","zIndex","position","textDecoration","marginRight","CustomSwitch","styled","Switch","theme","padding","borderRadius","content","top","transform","width","height","backgroundImage","encodeURIComponent","palette","getContrastText","primary","main","left","right","boxShadow","openModal","setOpenModal","isMobile","setReloadNeeded","SlideTransition","useSelector","state","auth","isAdmin","isGuest","useState","setTitle","setDesc","setAccess","setEditable","code","setCode","language","setLanguage","dispatch","useDispatch","handleClose","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","Dialog","open","onClose","scroll","fullWidth","maxWidth","fullScreen","TransitionComponent","DialogTitle","textTransform","DialogContent","dividers","ref","display","justifyContent","opacity","Box","component","sx","mb","noValidate","autoComplete","TextField","required","id","label","placeholder","value","onChange","event","target","multiline","FormControl","InputLabel","Select","labelId","MenuItem","FormControlLabel","control","checked","labelPlacement","marginLeft","alignItems","e","CodeEditorv3","DialogActions","Button","variant","messageActions","type","message","fetch","SERVER_LINK","headers","method","body","JSON","stringify","credentials","then","response","json","res","ok","Promise","reject","description","catch","err","console","error","ConfirmationDialog","setOpen","handleDeleteOperation","Fade","DialogContentText","autoFocus","useFetchCodeForNote","noteid","setLoading","finally","viewNote","setEditNote","setOpenEditModal","markEditOrDelete","_id","lastModifiedAt","auth_username","openDeleteModal","setOpenDeleteModal","copied","setCopied","setTimeout","loading","codeSubmittingState","setCodeSubmittingState","status","setResponse","input","setInput","endRef","intervalID","stopInterval","useCallback","clearInterval","handleCompile","preventDefault","msg","scrollIntoView","behavior","query","queryData","setInterval","queryId","data","output","serverError","isEditable","isDeleteable","Tooltip","Zoom","placement","Fab","link","window","location","href","copy","size","Share","ml","disabled","Edit","Delete","IconButton","result","Check","ContentCopy","isReadOnly","isLoading","maxRows","marginTop","stdout","stderr","toString","LoadingSpinner","moment","fromNow","editNote","title_","desc_","access_","editable_","code_","language_","realUsername","forwardRef","props","Slide","direction","isFirstRender","useSearchNotes_Transition","searchNoteQuery","setAllNotes","originalAllNotes","useTransition","isSearching","startTransition","filter","toLowerCase","includes","Tools","addNoteHandler","isAdminMode","setAdminMode","NoteAdd","prev","Cancel","SupervisedUserCircle","Heading","reloadNeeded","marginBottom","SearchComponent","setSearchNoteQuery","backgroundColor","transition","Search","InputBase","paddingLeft","inputProps","NotesSection","allNotes","loggedIn","KeyboardArrowRight","map","length","setOriginalAllNotes","openAddModal","setOpenAddModal","openViewModal","openEditModal","undefined","setError","useSearchParams","searchParams","setSearchParams","useMediaQuery","querynoteid","get","foundNote","find","ele","property","newEle","fetchNotesFromServer","mode","pointerEvents","translate","name","onLoad","parseInt","showPrintMargin","showGutter","readOnly","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize"],"sourceRoot":""}