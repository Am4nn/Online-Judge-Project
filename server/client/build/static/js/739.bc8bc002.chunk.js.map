{"version":3,"file":"static/js/739.bc8bc002.chunk.js","mappings":"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","sources":["webpack://oj-client/./src/pages/Notes/Note/Note.module.css?db37","pages/Notes/Note/Note.js","pages/Notes/AddNote/AddNote.js","webpack://oj-client/./src/pages/Notes/ViewNote/ViewNote.module.css?e4d4","pages/Notes/ViewNote/ViewNote.js","pages/Notes/EditNote/EditNote.js","webpack://oj-client/./src/pages/Notes/Notes.module.css?991b","pages/Notes/Notes.js","pages/Question/Editor/CodeEditorv3.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"note\":\"Note_note__1zm-A\",\"title\":\"Note_title__yCf6+\",\"desc\":\"Note_desc__NzxhC\",\"ftr\":\"Note_ftr__BNTLf\"};","import React, { Fragment } from 'react';\r\nimport classes from './Note.module.css';\r\n\r\nconst Note = ({ note, setOpenViewModal, setViewNote, refreshNotesList }) => {\r\n\r\n    let { title, codeid, desc, username, access, editable, edited, deleted } = note;\r\n    title = title || \"Title\";\r\n    codeid = codeid || null;\r\n    desc = desc || \"Description\";\r\n    editable = editable || false;\r\n    username = username || \"guest\";\r\n\r\n    const noteClickHandler = () => {\r\n        if ((!codeid || edited || deleted)) return;\r\n        setViewNote(note);\r\n        setOpenViewModal(true);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.note} style={(edited || deleted) && { cursor: 'default' }} onClick={noteClickHandler}>\r\n            {(edited || deleted) ?\r\n                <Fragment>\r\n                    <div style={{ fontSize: '2.4rem', fontWeight: 700, color: 'hsl(0, 60%, 50%)' }}>{deleted ? \"Deleted\" : \"Edited\"}</div>\r\n                    <div style={{ fontSize: '0.8rem', color: 'hsla(0, 40%, 50%,0.8)', margin: 'unset', lineHeight: '0.9rem' }}>{deleted ? \"This note has been Removed !\" : \"An Edit has been made to this note\"}</div>\r\n                    <div style={{ fontSize: '0.8rem', color: 'hsla(0, 40%, 50%,0.8)', margin: 'unset', lineHeight: '0.9rem' }}>\r\n                        <span style={{\r\n                            zIndex: 100, position: 'relative',\r\n                            color: 'blue', textDecoration: 'underline',\r\n                            fontWeight: 500, cursor: 'pointer', marginRight: '3px'\r\n                        }}\r\n                            onClick={refreshNotesList} >\r\n                            Refresh\r\n                        </span>\r\n                        this page to see changes !\r\n                    </div>\r\n                </Fragment>\r\n                :\r\n                < Fragment >\r\n                    <h4 className={classes.title}>{title}</h4>\r\n                    <p className={classes.desc}>{desc}</p>\r\n                </Fragment>\r\n            }\r\n            <div className={classes.ftr}>\r\n                <span>{username}</span>\r\n                <span>{access} / {editable ? \"editable\" : \"read-only\"}</span>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Note;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    FormControl, FormControlLabel,\r\n    DialogContent, DialogTitle,\r\n    Button, styled, TextField,\r\n    Dialog, DialogActions,\r\n    InputLabel, MenuItem,\r\n    Select, Switch\r\n} from '@mui/material';\r\nimport { Box } from '@mui/system';\r\n\r\nimport CodeEditorv3 from '../../Question/Editor/CodeEditorv3';\r\nimport Note from '../Note/Note';\r\nimport { SERVER_LINK } from '../../../dev-server-link';\r\nimport { messageActions } from '../../../store/Message/message-slice';\r\n\r\nconst AddNote = ({ openModal, setOpenModal, isMobile, setReloadNeeded, SlideTransition }) => {\r\n\r\n    const { username, isAdmin, isGuest } = useSelector(state => state.auth);\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [access, setAccess] = useState('public');\r\n    const [editable, setEditable] = useState(false);\r\n    const [code, setCode] = useState('');\r\n    const [language, setLanguage] = useState('c');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const resetStates = () => {\r\n        setTitle('');\r\n        setDesc('');\r\n        setAccess('public');\r\n        setEditable(false);\r\n        setCode('');\r\n    }\r\n\r\n    const handleClose = () => {\r\n        resetStates();\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        if (!title || !desc) {\r\n            dispatch(messageActions.set({ type: 'error', message: \"title and description can't be empty\", description: 'title and description are required so please fill both !!!' }));\r\n            return;\r\n        }\r\n\r\n        handleClose();\r\n        dispatch(messageActions.set({ type: 'info', message: 'Adding New Note...' }));\r\n        // send request to server to add note with given info and credentials\r\n        fetch(\r\n            `${SERVER_LINK}/api/notes`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify({ title, desc, code, language, access, editable }),\r\n                credentials: 'include'\r\n            }\r\n        )\r\n            .then(async response => {\r\n                const res = await response.json();\r\n                if (response.ok) return res\r\n                return Promise.reject(res);\r\n            })\r\n            .then(response => {\r\n                dispatch(messageActions.set({ type: 'success', message: 'Added Note Successfully !', description: JSON.stringify(response) }));\r\n                setReloadNeeded(true);\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                dispatch(messageActions.set({ type: 'error', message: 'Adding Note Unsuccessful!', description: JSON.stringify(err) }));\r\n            })\r\n    }\r\n\r\n    const descriptionElementRef = useRef(null);\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [openModal]);\r\n\r\n    useEffect(() => {\r\n        if (access === 'private') setEditable(false);\r\n    }, [access]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={() => setOpenModal(false)}\r\n            scroll='paper'\r\n            aria-labelledby=\"Add-Note\"\r\n            fullWidth\r\n            maxWidth={!isMobile && 'sm'}\r\n            fullScreen={isMobile}\r\n            TransitionComponent={SlideTransition}\r\n        >\r\n            <DialogTitle style={{ textTransform: 'capitalize' }}>Add Note</DialogTitle>\r\n            <DialogContent dividers ref={descriptionElementRef}>\r\n                <div style={{ display: 'flex', justifyContent: 'center', position: 'relative' }}>\r\n                    <span style={{ position: 'absolute', top: '-0.8rem', left: '0', fontWeight: 600, opacity: 0.6 }}>Preview :</span>\r\n                    <Note note={{ title, desc, access, editable, username }} />\r\n                </div>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { mb: 1.3, width: '85%' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <TextField\r\n                        required\r\n                        id=\"title-textarea\"\r\n                        label=\"Title\"\r\n                        placeholder=\"Write max 20 characters\"\r\n                        value={title}\r\n                        onChange={event => setTitle(event.target.value)}\r\n                    />\r\n                    <TextField\r\n                        id=\"desc-textarea\"\r\n                        label=\"Description\"\r\n                        placeholder=\"Write max 200 characters\"\r\n                        multiline\r\n                        value={desc}\r\n                        onChange={event => setDesc(event.target.value)}\r\n                    />\r\n                    <FormControl sx={{ width: '85%' }}>\r\n                        <InputLabel id=\"access-input-label\">Access</InputLabel>\r\n                        <Select\r\n                            labelId=\"access-input-label\"\r\n                            id=\"access-input\"\r\n                            label=\"Access\"\r\n                            value={access}\r\n                            onChange={event => setAccess(event.target.value)}\r\n                        >\r\n                            {isAdmin && <MenuItem value='global'>Global</MenuItem>}\r\n                            <MenuItem value='public'>Public</MenuItem>\r\n                            {!isGuest && <MenuItem value='private'>Private</MenuItem>}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    {(access !== 'private') ?\r\n                        <div>\r\n                            <FormControlLabel\r\n                                label=\"Editable (By Anyone)\"\r\n                                control={<CustomSwitch checked={editable} onChange={event => setEditable(event.target.checked)} />}\r\n                                labelPlacement='start'\r\n                            />\r\n                            <span style={{ marginLeft: '0.9rem', fontWeight: 600, opacity: 0.6 }}>{editable ? \"Yes\" : \"No\"} </span>\r\n                        </div>\r\n                        :\r\n                        <div style={{ fontSize: '0.85rem', fontWeight: 600, opacity: 0.6, margin: '0.6rem 0 0.6rem 0' }}>\r\n                            Private Note can't be made Editable by everyone (as only you can view/edit)\r\n                        </div>\r\n                    }\r\n\r\n                    <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between' }}>\r\n                        <div style={{ fontWeight: 600, fontSize: '1.1rem', opacity: 0.7 }}>Enter Code : </div>\r\n                        <FormControl>\r\n                            <InputLabel id=\"changeLang-select-label\">Language</InputLabel>\r\n                            <Select\r\n                                labelId=\"changeLang-select-label\"\r\n                                id=\"changeLang-select\"\r\n                                value={language}\r\n                                label=\"Language\"\r\n                                style={{ width: '8em', height: '2.5em' }}\r\n                                onChange={e => setLanguage(e.target.value)}\r\n                            >\r\n                                <MenuItem value={'c'}>C</MenuItem>\r\n                                <MenuItem value={'cpp'}>Cpp</MenuItem>\r\n                                <MenuItem value={'py'}>Python</MenuItem>\r\n                                <MenuItem value={'java'}>JAVA</MenuItem>\r\n                                <MenuItem value={'js'}>JS</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <CodeEditorv3\r\n                        code={code}\r\n                        setCode={setCode}\r\n                        language={language}\r\n                        fontSize={13}\r\n                    />\r\n                </Box>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button style={{ textTransform: 'capitalize' }} variant='outlined' color='secondary' onClick={handleAdd}>Add</Button>\r\n                <Button style={{ textTransform: 'capitalize' }} variant='outlined' onClick={handleClose}>Cancel</Button>\r\n            </DialogActions>\r\n        </Dialog >\r\n    );\r\n}\r\n\r\nconst CustomSwitch = styled(Switch)(({ theme }) => ({\r\n    padding: 8,\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 22 / 2,\r\n        '&:before, &:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            top: '50%',\r\n            transform: 'translateY(-50%)',\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        '&:before': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n            left: 12,\r\n        },\r\n        '&:after': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n            right: 12,\r\n        },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: 'none',\r\n        width: 16,\r\n        height: 16,\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nexport default AddNote;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"ViewNote_body__+CDLN\",\"response\":\"ViewNote_response__h-VhU\",\"resHead\":\"ViewNote_resHead__Vhkwn\",\"resTextHead\":\"ViewNote_resTextHead__eYJO6\"};","import React, { Fragment, useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    Button, DialogContentText,\r\n    Fab, Fade, IconButton, Tooltip,\r\n    Zoom, Dialog, DialogActions,\r\n    DialogContent, DialogTitle, TextField\r\n} from '@mui/material';\r\nimport {\r\n    Check, ContentCopy,\r\n    Delete, Edit, Share\r\n} from '@mui/icons-material';\r\nimport { Box } from '@mui/system';\r\nimport moment from 'moment';\r\nimport copy from 'copy-to-clipboard';\r\nimport Note from '../Note/Note';\r\nimport classes from './ViewNote.module.css';\r\nimport { SERVER_LINK } from '../../../dev-server-link';\r\nimport CodeEditorv3 from '../../Question/Editor/CodeEditorv3';\r\nimport { messageActions } from '../../../store/Message/message-slice';\r\nimport LoadingSpinner from './../../../compenents/LoadingSpinner/LoadingSpinner';\r\n\r\nconst ViewNote = ({ openModal, setOpenModal, viewNote, setEditNote, setOpenEditModal, isMobile, markEditOrDelete, setReloadNeeded, SlideTransition }) => {\r\n\r\n    const { username, title, desc, access, editable, codeid, _id: noteid, lastModifiedAt } = viewNote;\r\n\r\n    const dispatch = useDispatch();\r\n    const { username: auth_username, isAdmin, isGuest } = useSelector(state => state.auth);\r\n\r\n    const [code, setCode] = useState('');\r\n    const [language, setLanguage] = useState('c');\r\n    const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n    const [copied, setCopied] = useState(false);\r\n    if (copied === true) setTimeout(() => setCopied(false), 2500);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const handleClose = () => {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const descriptionElementRef = useRef(null);\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [openModal]);\r\n\r\n    useFetchCodeForNote(codeid, noteid, setCode, setLanguage, setLoading);\r\n\r\n    const copyHandler = () => {\r\n        const result = copy(code);\r\n        const type = result ? 'success' : 'error';\r\n        const message = result ? 'Code copied successfully !' : 'There are some errors copying the code !';\r\n\r\n        dispatch(messageActions.set({ type, message }));\r\n        setCopied(true);\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        setEditNote({ ...viewNote, code, language });\r\n        setOpenEditModal(true);\r\n        setOpenModal(false);\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setOpenDeleteModal(false);\r\n        setOpenModal(false);\r\n\r\n        // Make a request to server with credentials to delete perticular note\r\n        fetch(\r\n            `${SERVER_LINK}/api/notes/${noteid}`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'DELETE',\r\n                credentials: 'include'\r\n            }\r\n        )\r\n            .then(async response => {\r\n                const res = await response.json();\r\n                if (response.ok) return res\r\n                return Promise.reject(res);\r\n            })\r\n            .then(response => {\r\n                dispatch(messageActions.set({ type: 'success', message: 'Deleted Note Successfully !', description: JSON.stringify(response) }));\r\n                markEditOrDelete(noteid, 'deleted');\r\n                setReloadNeeded(true);\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                dispatch(messageActions.set({ type: 'error', message: 'Deleting Note Unsuccessful!', description: JSON.stringify(err) }));\r\n            })\r\n    }\r\n\r\n    const handleShare = () => {\r\n        const link = window.location.href;\r\n        const result = copy(link);\r\n        let type = '';\r\n        let message = '';\r\n        let description = '';\r\n\r\n        if (!result) {\r\n            type = 'error'; message = \"There are some errors copying the Note's Link !\";\r\n            description = 'Try using another browser !';\r\n        } else if (access === 'private') {\r\n            type = 'warning'; message = \"Link copied but someone else can't open it as its a Private Note\";\r\n            description = 'Make this Note public to make it share-able !';\r\n        } else {\r\n            type = 'success'; message = 'Link to the Note copied successfully !';\r\n            description = `Link to Note : ${link}`;\r\n        }\r\n\r\n        dispatch(messageActions.set({ type, message, description }));\r\n    }\r\n\r\n    const [codeSubmittingState, setCodeSubmittingState] = useState('not-initialized');\r\n    const [response, setResponse] = useState({ status: 'pending' });\r\n    const [input, setInput] = useState('');\r\n    const endRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setCode('');\r\n        setInput('');\r\n        setLoading(true);\r\n        setCodeSubmittingState('not-initialized');\r\n        setResponse({ status: 'pending' });\r\n    }, [noteid]);\r\n\r\n    const intervalID = useRef(null);\r\n    const stopInterval = useCallback(() => {\r\n        if (intervalID.current) {\r\n            clearInterval(intervalID.current);\r\n            intervalID.current = null;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (intervalID.current)\r\n            setCodeSubmittingState('not-initialized');\r\n        stopInterval();\r\n    }, [openModal, stopInterval]);\r\n\r\n    const handleCompile = async event => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (codeSubmittingState === 'submitting') return;\r\n\r\n        setCodeSubmittingState('submitting');\r\n        setResponse({ msg: 'Queueing...', status: 'pending' });\r\n\r\n        if (endRef.current)\r\n            endRef.current.scrollIntoView({ behavior: 'smooth' });\r\n\r\n        try {\r\n            const query = await fetch(\r\n                `${SERVER_LINK}/api/explore/codeExecutor`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                    body: JSON.stringify({ code, language, input })\r\n                }\r\n            );\r\n            const queryData = await query.json();\r\n            setResponse(queryData);\r\n\r\n            if (query.ok) {\r\n                intervalID.current = setInterval(async () => {\r\n                    const response = await fetch(\r\n                        `${SERVER_LINK}/api/explore/status/${queryData.queryId}`,\r\n                        {\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            method: 'GET'\r\n                        }\r\n                    );\r\n                    const data = await response.json();\r\n                    if (intervalID.current && !response.ok) {\r\n                        stopInterval();\r\n                        setCodeSubmittingState('submitted');\r\n                        setResponse(data);\r\n                    }\r\n                    else if (intervalID.current && data.status !== 'pending') {\r\n                        stopInterval();\r\n                        setCodeSubmittingState('submitted');\r\n                        setResponse({ ...data.output, status: data.status });\r\n                    }\r\n                    // else console.log('status -> pending');\r\n                }, 1000);\r\n            }\r\n            else {\r\n                setCodeSubmittingState('submitted');\r\n            }\r\n        } catch (error) {\r\n            setResponse({ msg: 'caught errors while sending code to server for getting verdict', serverError: JSON.stringify(error) });\r\n            setCodeSubmittingState('submitted');\r\n        }\r\n    }\r\n\r\n    const isEditable = (isAdmin || (access !== 'private' && editable) || (!isGuest && (auth_username === username)));\r\n    const isDeleteable = (isAdmin || (!isGuest && (auth_username === username)));\r\n\r\n    return (\r\n        <Fragment>\r\n            <ConfirmationDialog open={openDeleteModal} setOpen={setOpenDeleteModal} handleDeleteOperation={handleDelete} />\r\n            <Dialog\r\n                open={openModal}\r\n                onClose={() => setOpenModal(false)}\r\n                scroll='paper'\r\n                aria-labelledby=\"View-Note\"\r\n                fullWidth\r\n                maxWidth={!isMobile && 'md'}\r\n                fullScreen={isMobile}\r\n                TransitionComponent={SlideTransition}\r\n            >\r\n                <DialogTitle style={{ textTransform: 'capitalize' }}>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <span>View Note</span>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <Tooltip TransitionComponent={Zoom} title='Share' placement='bottom'>\r\n                                <Box>\r\n                                    <Fab onClick={handleShare} size=\"small\" color=\"success\" aria-label=\"share\">\r\n                                        <Share />\r\n                                    </Fab>\r\n                                </Box>\r\n                            </Tooltip>\r\n                            <Tooltip TransitionComponent={Zoom} title={(!isEditable) ? \"Can't edit this note\" : 'Edit'} placement='bottom'>\r\n                                <Box>\r\n                                    <Fab onClick={handleEdit} size=\"small\" color=\"info\" aria-label=\"edit\" sx={{ ml: 1 }} disabled={(!isEditable)}>\r\n                                        <Edit />\r\n                                    </Fab>\r\n                                </Box>\r\n                            </Tooltip>\r\n                            <Tooltip TransitionComponent={Zoom} title={(!isDeleteable) ? \"Can't delete this note\" : 'Delete'} placement='bottom'>\r\n                                <Box>\r\n                                    <Fab onClick={() => setOpenDeleteModal(true)} size=\"small\" color=\"warning\" aria-label=\"delete\" sx={{ ml: 1 }} disabled={(!isDeleteable)}>\r\n                                        <Delete />\r\n                                    </Fab>\r\n                                </Box>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent dividers ref={descriptionElementRef}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', position: 'relative' }}>\r\n                        <span style={{ position: 'absolute', top: '-0.8rem', left: '0', fontWeight: 600, opacity: 0.6 }}>Preview :</span>\r\n                        <Note note={{ title, desc, access, editable, username }} />\r\n                    </div>\r\n                    <Box\r\n                        component=\"form\"\r\n                        sx={{\r\n                            '& .MuiTextField-root': { mb: 1.3, width: '85%' },\r\n                        }}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between' }}>\r\n                            <div>\r\n                                <Tooltip TransitionComponent={Zoom} title={copied ? 'Code Copied' : 'Copy Code'} placement='right'>\r\n                                    <IconButton\r\n                                        onClick={copyHandler}\r\n                                        aria-label={copied ? 'Code Copied' : 'Copy Code'}\r\n                                    >\r\n                                        {copied ? <Check /> : <ContentCopy />}\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div style={{ fontWeight: 600, fontSize: '1.1rem', opacity: 0.7 }}>Language : {loading ? '...' : language}</div>\r\n                        </div>\r\n                        <CodeEditorv3\r\n                            code={code}\r\n                            setCode={setCode}\r\n                            language={language}\r\n                            fontSize={15}\r\n                            isReadOnly\r\n                            isLoading={loading}\r\n                        />\r\n                    </Box>\r\n\r\n                    <TextField\r\n                        id=\"input-textarea\"\r\n                        placeholder=\"Put Multiline Input here\"\r\n                        label='Any Input ?'\r\n                        color='secondary'\r\n                        fullWidth\r\n                        multiline\r\n                        maxRows='3'\r\n                        variant='outlined'\r\n                        sx={{ marginTop: '2rem' }}\r\n                        value={input}\r\n                        onChange={event => setInput(event.target.value)}\r\n                    />\r\n                    {codeSubmittingState !== 'not-initialized' && (\r\n                        <Box className={classes.body}>\r\n                            <div style={{ \"--col\": (response.status === 'success' ? 127 : 0) }} className={classes.response}>\r\n                                {response.msg &&\r\n                                    <div className={classes.resTextHead}>\r\n                                        <div className={classes.resHead}>Msg: </div>\r\n                                        <div>{response.msg}</div>\r\n                                    </div>\r\n                                }\r\n                                {response.stdout &&\r\n                                    <div className={classes.resTextHead}>\r\n                                        <div className={classes.resHead}>STDOUT: </div>\r\n                                        <div>{response.stdout}</div>\r\n                                    </div>\r\n                                }\r\n                                {response.stderr &&\r\n                                    <div className={classes.resTextHead}>\r\n                                        <div className={classes.resHead}>STDERR: </div>\r\n                                        <div>{response.stderr}</div>\r\n                                    </div>\r\n                                }\r\n                                {response.error &&\r\n                                    <div className={classes.resTextHead}>\r\n                                        <div className={classes.resHead}>Error: </div>\r\n                                        <div>{JSON.stringify(response.error)}</div>\r\n                                    </div>\r\n                                }\r\n                                {response.serverError &&\r\n                                    <div className={classes.resTextHead}>\r\n                                        <div className={classes.resHead}>ServerError: </div>\r\n                                        <div>{response.serverError.toString()}</div>\r\n                                    </div>\r\n                                }\r\n                                {response.status === 'pending' &&\r\n                                    <div style={{ marginTop: '2rem', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                        <LoadingSpinner />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </Box>\r\n                    )}\r\n                    <div ref={endRef} style={{ marginTop: '18rem' }} />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <div style={{ width: '100%', padding: '6px 8px', textTransform: 'capitalize' }}>\r\n                        <DialogContentText>\r\n                            Last Modified: {moment(lastModifiedAt).fromNow()}\r\n                        </DialogContentText>\r\n                    </div>\r\n                    <Button style={{ textTransform: 'capitalize' }} variant='outlined' color='secondary' onClick={handleCompile}>Compile</Button>\r\n                    <Button style={{ textTransform: 'capitalize' }} variant='outlined' onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog >\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst ConfirmationDialog = ({ open, setOpen, handleDeleteOperation }) => {\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-delete-note\"\r\n            TransitionComponent={Fade}\r\n        >\r\n            <DialogTitle>Delete Note</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Are you sure you want to delete this note ?\r\n                    <br />\r\n                    (Once Note is Delete can't be recovered !)\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleDeleteOperation}>Delete</Button>\r\n                <Button onClick={handleClose} autoFocus>Cancel</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nconst useFetchCodeForNote = (codeid, noteid, setCode, setLanguage, setLoading) => {\r\n    useEffect(() => {\r\n        if (!codeid) return;\r\n\r\n        // make request to server to fetch code with _id:codeid\r\n        fetch(\r\n            `${SERVER_LINK}/api/notes/${codeid}?noteid=${noteid}`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            }\r\n        )\r\n            .then(async response => {\r\n                const res = await response.json();\r\n                if (response.ok) return res;\r\n                return Promise.reject(res);\r\n            })\r\n            .then(response => {\r\n                setCode(response.code);\r\n                setLanguage(response.language);\r\n            })\r\n            .catch(error => { setCode(JSON.stringify(error)) })\r\n            .finally(() => setLoading(false))\r\n    }, [codeid, noteid, setCode, setLanguage, setLoading]);\r\n}\r\n\r\n\r\nexport default ViewNote;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { FormControl, FormControlLabel, InputLabel, MenuItem, Select, Switch, TextField } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { styled } from '@mui/material/styles';\r\nimport Note from '../Note/Note';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CodeEditorv3 from '../../Question/Editor/CodeEditorv3';\r\nimport { messageActions } from '../../../store/Message/message-slice';\r\nimport { SERVER_LINK } from '../../../dev-server-link';\r\n\r\n\r\nconst EditNote = ({ openModal, setOpenModal, editNote, isMobile, markEditOrDelete, setReloadNeeded, SlideTransition }) => {\r\n\r\n    const {\r\n        username, title: title_,\r\n        desc: desc_, access: access_,\r\n        editable: editable_, code: code_,\r\n        language: language_, _id\r\n    } = editNote;\r\n\r\n    const dispatch = useDispatch();\r\n    const { username: realUsername, isAdmin, isGuest } = useSelector(state => state.auth);\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [access, setAccess] = useState('public');\r\n    const [editable, setEditable] = useState(false);\r\n    const [language, setLanguage] = useState('cpp');\r\n    const [code, setCode] = useState('');\r\n\r\n    useEffect(() => {\r\n        title_ && setTitle(title_);\r\n        desc_ && setDesc(desc_);\r\n        access_ && setAccess(access_);\r\n        editable_ && setEditable(editable_);\r\n        language_ && setLanguage(language_);\r\n        code_ && setCode(code_);\r\n    }, [title_, desc_, access_, editable_, language_, code_, dispatch]);\r\n\r\n    const handleClose = () => {\r\n        setOpenModal(false);\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if (!title || !desc) {\r\n            dispatch(messageActions.set({ type: 'error', message: \"title and description can't be empty\", description: 'title and description are required so please fill both !!!' }));\r\n            return;\r\n        }\r\n\r\n        handleClose();\r\n        dispatch(messageActions.set({ type: 'info', message: 'Editing the Note...' }));\r\n\r\n        // send request to server to edit note with given info and credentials\r\n        fetch(\r\n            `${SERVER_LINK}/api/notes/${_id}`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'PUT',\r\n                body: JSON.stringify({ title, desc, code, language, access, editable }),\r\n                credentials: 'include'\r\n            }\r\n        )\r\n            .then(async response => {\r\n                const res = await response.json();\r\n                if (response.ok) return res\r\n                return Promise.reject(res);\r\n            })\r\n            .then(response => {\r\n                dispatch(messageActions.set({ type: 'success', message: 'Edited Note Successfully !', description: JSON.stringify(response) }));\r\n                setReloadNeeded(true);\r\n                markEditOrDelete(_id, 'edited');\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                dispatch(messageActions.set({ type: 'error', message: 'Editing Note Unsuccessful!', description: JSON.stringify(err) }));\r\n            })\r\n    }\r\n\r\n    const descriptionElementRef = useRef(null);\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [openModal]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={handleClose}\r\n            scroll='paper'\r\n            aria-labelledby=\"Edit-Note\"\r\n            fullWidth\r\n            maxWidth={!isMobile && 'sm'}\r\n            fullScreen={isMobile}\r\n            TransitionComponent={SlideTransition}\r\n        >\r\n            <DialogTitle style={{ textTransform: 'capitalize' }}>Edit Note</DialogTitle>\r\n            <DialogContent dividers ref={descriptionElementRef}>\r\n                <div style={{ display: 'flex', justifyContent: 'center', position: 'relative' }}>\r\n                    <span style={{ position: 'absolute', top: '-0.8rem', left: '0', fontWeight: 600, opacity: 0.6 }}>Preview :</span>\r\n                    <Note note={{ title, desc, access, editable, username }} />\r\n                </div>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { mb: 1.3, width: '85%' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <TextField\r\n                        required\r\n                        id=\"title-textarea\"\r\n                        label=\"Title\"\r\n                        placeholder=\"Write max 20 characters\"\r\n                        value={title}\r\n                        onChange={event => setTitle(event.target.value)}\r\n                    />\r\n                    <TextField\r\n                        id=\"desc-textarea\"\r\n                        label=\"Description\"\r\n                        placeholder=\"Write max 200 characters\"\r\n                        multiline\r\n                        value={desc}\r\n                        onChange={event => setDesc(event.target.value)}\r\n                    />\r\n\r\n                    {(isAdmin || realUsername === username) &&\r\n                        <FormControl sx={{ width: '85%' }}>\r\n                            <InputLabel id=\"access-input-label\">Access</InputLabel>\r\n                            <Select\r\n                                labelId=\"access-input-label\"\r\n                                id=\"access-input\"\r\n                                label=\"Access\"\r\n                                value={access}\r\n                                onChange={event => setAccess(event.target.value)}\r\n                            >\r\n                                {isAdmin && <MenuItem value='global'>Global</MenuItem>}\r\n                                <MenuItem value='public'>Public</MenuItem>\r\n                                {(isAdmin || access === 'private' || realUsername === username) && !isGuest && <MenuItem value='private'>Private</MenuItem>}\r\n                            </Select>\r\n                        </FormControl>\r\n                    }\r\n\r\n                    {(access !== 'private') ?\r\n                        <div>\r\n                            <FormControlLabel\r\n                                label=\"Editable (By Anyone)\"\r\n                                control={<CustomSwitch checked={editable} onChange={event => setEditable(event.target.checked)} />}\r\n                                labelPlacement='start'\r\n                            />\r\n                            <span style={{ marginLeft: '0.9rem', fontWeight: 600, opacity: 0.6 }}>{editable ? \"Yes\" : \"No\"} </span>\r\n                        </div>\r\n                        :\r\n                        <div style={{ fontSize: '0.85rem', fontWeight: 600, opacity: 0.6, margin: '0.6rem 0 0.6rem 0' }}>\r\n                            Private Note can't be made Editable by everyone (as only you can view/edit)\r\n                        </div>\r\n                    }\r\n\r\n                    <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between' }}>\r\n                        <div style={{ fontWeight: 600, fontSize: '1.1rem', opacity: 0.7 }}>Enter Code : </div>\r\n                        <FormControl>\r\n                            <InputLabel id=\"changeLang-select-label\">Language</InputLabel>\r\n                            <Select\r\n                                labelId=\"changeLang-select-label\"\r\n                                id=\"changeLang-select\"\r\n                                value={language}\r\n                                label=\"Language\"\r\n                                style={{ width: '8em', height: '2.5em' }}\r\n                                onChange={e => setLanguage(e.target.value)}\r\n                            >\r\n                                <MenuItem value={'c'}>C</MenuItem>\r\n                                <MenuItem value={'cpp'}>Cpp</MenuItem>\r\n                                <MenuItem value={'py'}>Python</MenuItem>\r\n                                <MenuItem value={'java'}>JAVA</MenuItem>\r\n                                <MenuItem value={'js'}>JS</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <CodeEditorv3\r\n                        code={code}\r\n                        setCode={setCode}\r\n                        language={language}\r\n                        fontSize={13}\r\n                    />\r\n                </Box>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button style={{ textTransform: 'capitalize' }} variant='outlined' color='secondary' onClick={handleSave}>Save</Button>\r\n                <Button style={{ textTransform: 'capitalize' }} variant='outlined' onClick={handleClose}>Cancel</Button>\r\n            </DialogActions>\r\n        </Dialog >\r\n    );\r\n}\r\n\r\nconst CustomSwitch = styled(Switch)(({ theme }) => ({\r\n    padding: 8,\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 22 / 2,\r\n        '&:before, &:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            top: '50%',\r\n            transform: 'translateY(-50%)',\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        '&:before': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n            left: 12,\r\n        },\r\n        '&:after': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n            right: 12,\r\n        },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: 'none',\r\n        width: 16,\r\n        height: 16,\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nexport default EditNote;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"head\":\"Notes_head__PxwPV\",\"noteList\":\"Notes_noteList__vMwKp\",\"addNoteFab\":\"Notes_addNoteFab__aHO+F\",\"adminModeFab\":\"Notes_adminModeFab__IAA1s\",\"searchNoteFab\":\"Notes_searchNoteFab__u+p7T\",\"container\":\"Notes_container__5IeH0\",\"ncLabel\":\"Notes_ncLabel__pnmDM\",\"noNote\":\"Notes_noNote__PQsTL\",\"red\":\"Notes_red__HdLv9\"};","import React, { forwardRef, Fragment, useCallback, useEffect, useState, useTransition } from 'react'\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Box } from '@mui/system';\r\nimport { Fab, InputBase, Slide, Tooltip, Zoom, useMediaQuery } from '@mui/material';\r\nimport { Cancel, NoteAdd, Search, SupervisedUserCircle, KeyboardArrowRight } from '@mui/icons-material'\r\n\r\nimport AddNote from './AddNote/AddNote';\r\nimport ViewNote from './ViewNote/ViewNote';\r\nimport EditNote from './EditNote/EditNote';\r\nimport { SERVER_LINK } from '../../dev-server-link';\r\nimport { messageActions } from '../../store/Message/message-slice';\r\nimport LoadingSpinner from '../../compenents/LoadingSpinner/LoadingSpinner';\r\nimport Note from './Note/Note';\r\nimport classes from './Notes.module.css';\r\n// import useDebounce from '../../hooks/useDebounce';\r\n// import useTimeout from './../../hooks/useTimeout';\r\n\r\n/*\r\n    Schema : _id, title, desc, codeid, username, access, editable, language\r\n    \r\n    title: Max 18 characters\r\n\r\n    codeid: It represent database _id for codes (if any)\r\n\r\n    language: c, cpp, js, java, python\r\n\r\n    access : global, public, private\r\n        global : It is submitted by admin and \r\n                 is shown on top and can/can't (depends on editable) be modified by anyone else than admin, \r\n                 and can be viewed by anyone.\r\n        public : It is submitted by any user/guest and\r\n                 is editable by anyone/none(depends on user to allow edit or not)\r\n                 and can be viewed by anyone.\r\n        private: It is submitted by loggedIn user and\r\n                 can only read/edited by that perticular user only.\r\n\r\n    editable: true/false\r\n        It represents if a public/global note is editable by any user/guest.\r\n        It won't matter if note is private (hence, there is no field like editable in private note).\r\n\r\n    *   Notes are only deletable by user that created the note and \r\n        if note is created by guest then anyone one can delete it\r\n        and admin can delete any note.\r\n*/\r\n\r\nconst SlideTransition = forwardRef((props, ref) => (\r\n    <Slide ref={ref} {...props} direction=\"up\" />\r\n));\r\n\r\nlet isFirstRender = true;\r\n\r\nconst Notes = () => {\r\n\r\n    const [allNotes, setAllNotes] = useState([]);\r\n    const [originalAllNotes, setOriginalAllNotes] = useState([]);\r\n\r\n    const [openAddModal, setOpenAddModal] = useState(false);\r\n\r\n    const [openViewModal, setOpenViewModal] = useState(false);\r\n    const [viewNote, setViewNote] = useState({});\r\n\r\n    const [openEditModal, setOpenEditModal] = useState(false);\r\n    const [editNote, setEditNote] = useState({});\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(undefined);\r\n    const [reloadNeeded, setReloadNeeded] = useState(false);\r\n    const [searchNoteQuery, setSearchNoteQuery] = useState('');\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [isAdminMode, setAdminMode] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const { loggedIn, username, isAdmin } = useSelector(state => state.auth);\r\n    const isMobile = useMediaQuery('(max-width:620px)');\r\n\r\n    useEffect(() => {\r\n        if (!isFirstRender || loading) return;\r\n        isFirstRender = false;\r\n        const querynoteid = searchParams.get(\"view\");\r\n        if (!querynoteid) return;\r\n        const foundNote = originalAllNotes.find(ele => ele._id === querynoteid);\r\n        if (!foundNote) {\r\n            dispatch(messageActions.set({\r\n                type: 'error',\r\n                message: \"The Note's Link you are accessing does not exists\",\r\n                description: 'There is a query string in url, which does not belong to any note, this may be due to : the note you are tying to access has been deleted or may be link in incomplete !'\r\n            }));\r\n            return;\r\n        }\r\n\r\n        setOpenViewModal(true);\r\n        setViewNote(foundNote);\r\n    }, [loading, searchParams, originalAllNotes, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (isFirstRender) return;\r\n        if (openViewModal) setSearchParams({ \"view\": viewNote._id });\r\n        else setSearchParams({});\r\n    }, [openViewModal, setSearchParams, viewNote]);\r\n\r\n\r\n    const markEditOrDelete = (_id, property) => {\r\n        setAllNotes(prev => {\r\n            const newNotes = prev.map(ele => {\r\n                if (ele._id === _id) {\r\n                    const newEle = { ...ele };\r\n                    newEle[property] = true;\r\n                    return newEle;\r\n                }\r\n                else return ele;\r\n            });\r\n            return newNotes;\r\n        });\r\n    }\r\n\r\n    /*\r\n    Make a request to server, with credentials and it will return an array \r\n    containing all global and public notes but also with private notes specific\r\n    to that credentials.\r\n    */\r\n    const fetchNotesFromServer = useCallback(() => {\r\n        setLoading(true);\r\n        fetch(\r\n            `${SERVER_LINK}/api/notes/allNotes${(isAdminMode) ? '?admin=true' : ''}`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            }\r\n        )\r\n            .then(async response => {\r\n                const res = await response.json();\r\n                if (response.ok) return res\r\n                return Promise.reject(res);\r\n            })\r\n            .then(response => { setAllNotes(response); setOriginalAllNotes(response); })\r\n            .catch(setError)\r\n            .finally(() => setLoading(false))\r\n    }, [isAdminMode]);\r\n\r\n    useEffect(() => {\r\n        fetchNotesFromServer();\r\n    }, [dispatch, fetchNotesFromServer]);\r\n\r\n    useEffect(() => {\r\n        dispatch(messageActions.set({\r\n            type: 'info',\r\n            message: 'Click on Notes to view their Code !',\r\n            description: 'If you click on a Note, you will be able to share, edit, or delete it. Alternatively, you can add a new note by clicking on the Add button !'\r\n        }));\r\n    }, [dispatch]);\r\n\r\n    const addNoteHandler = () => setOpenAddModal(true);\r\n\r\n    // const [isSearching] = useSearchNotes_Debounce({ searchNoteQuery, setAllNotes, originalAllNotes });\r\n    const [isSearching] = useSearchNotes_Transition({ searchNoteQuery, setAllNotes, originalAllNotes });\r\n\r\n    const refreshNotesList = () => {\r\n        setEditNote({});\r\n        setViewNote({});\r\n        setReloadNeeded(false);\r\n        fetchNotesFromServer();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* show loading while notes are being fetched ! */}\r\n            {loading && <LoadingSpinner />}\r\n            {!loading && error && (\r\n                <div>\r\n                    <div className='errorTemplate'>\r\n                        <div><span>Msg : </span>Wasn't able to connect to server check if your are not offline or server might not be working !</div>\r\n                        {error && <div><span>Error : </span>{JSON.stringify(error)}</div>}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {!error && (\r\n                <div className={classes.container}>\r\n                    <AddNote setSearchParams={setSearchParams} SlideTransition={SlideTransition} setReloadNeeded={setReloadNeeded} isMobile={isMobile} openModal={openAddModal} setOpenModal={setOpenAddModal} />\r\n                    <ViewNote setSearchParams={setSearchParams} SlideTransition={SlideTransition} setReloadNeeded={setReloadNeeded} markEditOrDelete={markEditOrDelete} isMobile={isMobile} openModal={openViewModal} setOpenModal={setOpenViewModal} setEditNote={setEditNote} setOpenEditModal={setOpenEditModal} viewNote={viewNote} />\r\n                    <EditNote setSearchParams={setSearchParams} SlideTransition={SlideTransition} setReloadNeeded={setReloadNeeded} markEditOrDelete={markEditOrDelete} isMobile={isMobile} openModal={openEditModal} setOpenModal={setOpenEditModal} editNote={editNote} />\r\n\r\n                    <Tools\r\n                        addNoteHandler={addNoteHandler}\r\n                        isAdmin={isAdmin}\r\n                        isAdminMode={isAdminMode}\r\n                        setAdminMode={setAdminMode}\r\n                    />\r\n\r\n                    <Heading\r\n                        refreshNotesList={refreshNotesList}\r\n                        reloadNeeded={reloadNeeded}\r\n                    />\r\n\r\n                    <SearchComponent\r\n                        searchNoteQuery={searchNoteQuery}\r\n                        setSearchNoteQuery={setSearchNoteQuery}\r\n                        isSearching={isSearching}\r\n                    />\r\n\r\n                    {!loading && (\r\n                        <NotesSection\r\n                            allNotes={allNotes}\r\n                            refreshNotesList={refreshNotesList}\r\n                            setViewNote={setViewNote}\r\n                            setOpenViewModal={setOpenViewModal}\r\n                            loggedIn={loggedIn}\r\n                            username={username}\r\n                            addNoteHandler={addNoteHandler}\r\n                        />\r\n                    )}\r\n\r\n                </div>\r\n            )}\r\n        </Fragment >\r\n    )\r\n};\r\n\r\nconst useSearchNotes_Transition = ({ searchNoteQuery, setAllNotes, originalAllNotes }) => {\r\n    const [isSearching, startTransition] = useTransition();\r\n    useEffect(() => {\r\n        startTransition(() => {\r\n            if (!searchNoteQuery) setAllNotes(originalAllNotes);\r\n            else setAllNotes(originalAllNotes.filter(note => (\r\n                note.title.toLowerCase().includes(searchNoteQuery.toLowerCase()) ||\r\n                note.desc.toLowerCase().includes(searchNoteQuery.toLowerCase())\r\n            )));\r\n        });\r\n    }, [searchNoteQuery, originalAllNotes, setAllNotes]);\r\n    return [isSearching];\r\n}\r\n\r\n// const useSearchNotes_Debounce = ({ searchNoteQuery, setAllNotes, originalAllNotes }) => {\r\n//     const [isSearching, setIsSearching] = useState(false);\r\n//     const { reset, clear } = useTimeout(() => {\r\n\r\n//         if (!searchNoteQuery) setAllNotes(originalAllNotes);\r\n//         else setAllNotes(originalAllNotes.filter(note => (\r\n//             note.title.toLowerCase().includes(searchNoteQuery.toLowerCase()) ||\r\n//             note.desc.toLowerCase().includes(searchNoteQuery.toLowerCase())\r\n//         )));\r\n\r\n//         setIsSearching(false);\r\n//     }, 500);\r\n//     useEffect(() => {\r\n//         setIsSearching(true);\r\n//         reset();\r\n//     }, [searchNoteQuery, reset]);\r\n//     useEffect(() => {\r\n//         setIsSearching(false);\r\n//         clear();\r\n//     }, [clear]);\r\n//     return [isSearching];\r\n// }\r\n\r\nconst Tools = ({ addNoteHandler, isAdmin, isAdminMode, setAdminMode }) => {\r\n    const adminModeHandler = () => isAdmin ? setAdminMode(prev => !prev) : setAdminMode(false);\r\n    return (\r\n        <Fragment>\r\n            <Tooltip TransitionComponent={Zoom} title='Add Note' placement='bottom'>\r\n                <Fab onClick={addNoteHandler} className={classes.addNoteFab} aria-label='add-note'>\r\n                    <NoteAdd sx={{ fontSize: '1.7rem' }} />\r\n                </Fab>\r\n            </Tooltip>\r\n\r\n            {isAdmin &&\r\n                <Tooltip TransitionComponent={Zoom} title='Admin Mode' placement='bottom'>\r\n                    <Fab color='secondary' onClick={adminModeHandler} className={classes.adminModeFab} aria-label='admin-mode'>\r\n                        {isAdminMode ?\r\n                            <Cancel sx={{ fontSize: '2.4rem' }} /> :\r\n                            <SupervisedUserCircle sx={{ fontSize: '2.4rem' }} />\r\n                        }\r\n                    </Fab>\r\n                </Tooltip>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst Heading = ({ reloadNeeded, refreshNotesList }) => (\r\n    <Fragment>\r\n        <div className={classes.head}>Notes</div>\r\n        {reloadNeeded &&\r\n            <div style={{\r\n                fontSize: '1rem', color: 'hsla(0, 40%, 50%,0.8)',\r\n                margin: 'unset', position: 'relative', marginBottom: '0.5rem'\r\n            }}><span onClick={refreshNotesList} style={{\r\n                zIndex: 100, position: 'relative',\r\n                color: 'blue', textDecoration: 'underline',\r\n                fontWeight: 500, cursor: 'pointer'\r\n            }}>Refresh</span> this page to see changes !</div>\r\n        }\r\n    </Fragment>\r\n);\r\n\r\nconst SearchComponent = ({ searchNoteQuery, setSearchNoteQuery, isSearching }) => {\r\n    return (\r\n        <Box sx={{\r\n            position: 'relative',\r\n            borderRadius: '5px',\r\n            backgroundColor: 'rgba(0,0,0,0.16)',\r\n            transition: 'all 300ms ease-in-out',\r\n            '&:hover': {\r\n                backgroundColor: 'rgba(0,0,0,0.13)',\r\n            },\r\n            width: '75%',\r\n            display: 'flex',\r\n            marginBottom: '1rem',\r\n            marginTop: '0.5rem'\r\n        }}>\r\n            <Box sx={{\r\n                padding: '0 1rem',\r\n                height: '100%',\r\n                position: 'absolute',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <Search />\r\n            </Box>\r\n            <InputBase sx={{\r\n                color: 'inherit',\r\n                width: '100%',\r\n                '& .MuiInputBase-input': {\r\n                    padding: '0.7rem',\r\n                    paddingLeft: '3.5rem',\r\n                    width: '100%'\r\n                },\r\n            }}\r\n                placeholder=\"Search a note…\"\r\n                inputProps={{ 'aria-label': 'search a note' }}\r\n                onChange={event => setSearchNoteQuery(event.target.value)}\r\n                value={searchNoteQuery}\r\n            />\r\n            {isSearching && <span style={{ display: 'flex', alignItems: 'center', marginRight: '5px' }} className='spin' color='black' />}\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst NotesSection = ({ allNotes, refreshNotesList, setViewNote, setOpenViewModal, loggedIn, username, addNoteHandler }) => {\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.ncLabel}><span>Global Notes by Admin</span><KeyboardArrowRight fontSize='medium' /></div>\r\n            <div className={classes.noteList}>\r\n                {allNotes.filter(note => (note.access === 'global')).map(note =>\r\n                    <Note refreshNotesList={refreshNotesList} key={note._id} note={note} setViewNote={setViewNote} setOpenViewModal={setOpenViewModal} />\r\n                )}\r\n            </div>\r\n\r\n            <div className={classes.ncLabel}><span>Public Notes by Users/Guest</span></div>\r\n            <div className={classes.noteList}>\r\n                {allNotes.filter(note => (note.access === 'public')).map(note =>\r\n                    <Note refreshNotesList={refreshNotesList} key={note._id} note={note} setViewNote={setViewNote} setOpenViewModal={setOpenViewModal} />\r\n                )}\r\n            </div>\r\n\r\n            <div className={classes.ncLabel}>\r\n                {loggedIn ?\r\n                    <span>Private Notes by {username}</span> :\r\n                    <span className={classes.red}>To see Private Notes you must be Logged In !</span>\r\n                }\r\n            </div>\r\n            {loggedIn ?\r\n                <div className={classes.noteList}>\r\n                    {allNotes.filter(note => (note.access === 'private')).length === 0 ?\r\n                        <span className={classes.red + ' ' + classes.noNote}>You have not created any Private Note, <button onClick={addNoteHandler}>Make One</button></span> :\r\n                        allNotes.filter(note => (note.access === 'private')).map(note =>\r\n                            <Note refreshNotesList={refreshNotesList} key={note._id} note={note} setViewNote={setViewNote} setOpenViewModal={setOpenViewModal} />\r\n                        )}\r\n                </div>\r\n                : \"\"\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Notes;","import React, { Fragment } from 'react'\r\n\r\nimport AceEditor from 'react-ace'\r\n\r\nimport \"ace-builds/webpack-resolver\"\r\n\r\nimport 'ace-builds/src-noconflict/mode-javascript'\r\nimport 'ace-builds/src-noconflict/mode-c_cpp'\r\nimport 'ace-builds/src-noconflict/mode-java'\r\nimport 'ace-builds/src-noconflict/mode-python'\r\n\r\nimport 'ace-builds/src-noconflict/theme-monokai'\r\nimport 'ace-builds/src-noconflict/ext-language_tools'\r\n\r\nconst CodeEditorv3 = props => {\r\n\r\n    const { code, setCode, language, fontSize, isReadOnly = false, isLoading = false } = props;\r\n\r\n    let mode = 'c_cpp';\r\n    switch (language) {\r\n        case 'c':\r\n            mode = 'c_cpp';\r\n            break;\r\n        case 'cpp':\r\n            mode = 'c_cpp';\r\n            break;\r\n        case 'java':\r\n            mode = 'java';\r\n            break;\r\n        case 'py':\r\n            mode = 'python';\r\n            break;\r\n        case 'js':\r\n            mode = 'javascript';\r\n            break;\r\n        default:\r\n            mode = 'c_cpp';\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading && <div style={{ position: 'absolute', zIndex: 10, display: 'flex', alignItems: 'center', pointerEvents: 'none', translate: '0 1rem' }}>\r\n                <div className='spin' />\r\n                <span style={{ fontSize: '1.8rem', color: 'rgba(128, 128, 128, 0.8)', fontWeight: 500, marginLeft: '1rem' }}>Loading Code...</span>\r\n            </div>}\r\n            <AceEditor\r\n                placeholder=\"Enter your code here\"\r\n                mode={mode}\r\n                theme=\"monokai\"\r\n                name=\"editorv3\"\r\n                onLoad={() => {\r\n                    // console.log('loaded')\r\n                }}\r\n                onChange={value => setCode(value)}\r\n                fontSize={parseInt(fontSize)}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                readOnly={isReadOnly}\r\n                highlightActiveLine={true}\r\n                value={code}\r\n                width='100%'\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: false,\r\n                    showLineNumbers: true,\r\n                    tabSize: 4,\r\n                }}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CodeEditorv3;"],"names":["_ref","note","setOpenViewModal","setViewNote","refreshNotesList","title","codeid","desc","username","access","editable","edited","deleted","_jsxs","className","classes","style","cursor","onClick","children","Fragment","_jsx","fontSize","fontWeight","color","margin","lineHeight","zIndex","position","textDecoration","marginRight","CustomSwitch","styled","Switch","_ref3","theme","padding","borderRadius","content","top","transform","width","height","backgroundImage","concat","encodeURIComponent","palette","getContrastText","primary","main","left","right","boxShadow","openModal","setOpenModal","isMobile","setReloadNeeded","SlideTransition","_useSelector","useSelector","state","auth","isAdmin","isGuest","_useState","useState","_useState2","_slicedToArray","setTitle","_useState3","_useState4","setDesc","_useState5","_useState6","setAccess","_useState7","_useState8","setEditable","_useState9","_useState10","code","setCode","_useState11","_useState12","language","setLanguage","dispatch","useDispatch","handleClose","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","Dialog","open","onClose","scroll","fullWidth","maxWidth","fullScreen","TransitionComponent","DialogTitle","textTransform","DialogContent","dividers","ref","display","justifyContent","opacity","Note","Box","component","sx","mb","noValidate","autoComplete","TextField","required","id","label","placeholder","value","onChange","event","target","multiline","FormControl","InputLabel","Select","labelId","MenuItem","FormControlLabel","control","checked","labelPlacement","marginLeft","alignItems","e","CodeEditorv3","DialogActions","Button","variant","messageActions","set","type","message","fetch","SERVER_LINK","headers","method","body","JSON","stringify","credentials","then","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","res","wrap","_context","prev","next","json","sent","ok","abrupt","Promise","reject","stop","_x","apply","arguments","description","catch","err","console","error","ConfirmationDialog","_ref5","setOpen","handleDeleteOperation","Fade","DialogContentText","autoFocus","useFetchCodeForNote","noteid","setLoading","_ref6","_callee4","_context4","_x3","finally","viewNote","setEditNote","setOpenEditModal","markEditOrDelete","_id","lastModifiedAt","auth_username","openDeleteModal","setOpenDeleteModal","copied","setCopied","setTimeout","loading","codeSubmittingState","setCodeSubmittingState","_useState13","status","_useState14","setResponse","_useState15","_useState16","input","setInput","endRef","intervalID","stopInterval","useCallback","clearInterval","handleCompile","_callee3","query","queryData","_context3","preventDefault","msg","scrollIntoView","behavior","setInterval","_callee2","data","_context2","queryId","_objectSpread","output","t0","serverError","_x2","isEditable","isDeleteable","Tooltip","Zoom","placement","Fab","link","window","location","href","copy","size","Share","ml","disabled","Edit","Delete","IconButton","result","Check","ContentCopy","isReadOnly","isLoading","maxRows","marginTop","stdout","stderr","toString","LoadingSpinner","moment","fromNow","editNote","title_","desc_","access_","editable_","code_","language_","realUsername","forwardRef","props","Slide","direction","isFirstRender","useSearchNotes_Transition","searchNoteQuery","setAllNotes","originalAllNotes","_useTransition","useTransition","_useTransition2","isSearching","startTransition","filter","toLowerCase","includes","Tools","addNoteHandler","isAdminMode","setAdminMode","NoteAdd","Cancel","SupervisedUserCircle","Heading","_ref4","reloadNeeded","marginBottom","SearchComponent","setSearchNoteQuery","backgroundColor","transition","Search","InputBase","paddingLeft","inputProps","NotesSection","allNotes","loggedIn","KeyboardArrowRight","map","length","setOriginalAllNotes","openAddModal","setOpenAddModal","openViewModal","openEditModal","_useState17","undefined","_useState18","setError","_useState19","_useState20","_useState21","_useState22","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState23","_useState24","useMediaQuery","querynoteid","get","foundNote","find","ele","property","newEle","fetchNotesFromServer","_useSearchNotes_Trans","AddNote","ViewNote","EditNote","_props$isReadOnly","_props$isLoading","mode","pointerEvents","translate","AceEditor","name","onLoad","parseInt","showPrintMargin","showGutter","readOnly","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize"],"sourceRoot":""}