{"version":3,"file":"static/js/68.e7c57811.chunk.js","mappings":"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","sources":["webpack://client/./src/compenents/Button/Button.module.css?8b47","compenents/Button/Button.js","webpack://client/./src/pages/Codes/Codes.module.css?aca7","../node_modules/@mui/icons-material/esm/ArrowBack.js","../node_modules/@mui/icons-material/esm/Check.js","../node_modules/@mui/icons-material/esm/ContentCopy.js","pages/Codes/Codes.js","pages/Question/Editor/CodeEditorv3.js","compenents/InputSlider/InputSlider.js","webpack://client/./src/pages/Question/Options/Options.module.css?dacc","pages/Question/Options/Options.js","../node_modules/copy-to-clipboard/index.js","../node_modules/toggle-selection/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__bCOnh\",\"skyblue\":\"Button_skyblue__rNZpw\",\"blue\":\"Button_blue__uFsUF\",\"grey\":\"Button_grey__-4fWo\",\"green\":\"Button_green__rEjag\",\"yellow\":\"Button_yellow__fkuwo\"};","import React from 'react'\r\nimport classes from './Button.module.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Button = props => {\r\n    const handler = props.onClick ? props.onClick : () => { };\r\n    return (\r\n        <Link onClick={handler} to={props.to} className={`${classes.btn} ${classes[props.color]}`}>\r\n            <span>{props.children}</span>\r\n        </Link >\r\n    )\r\n}\r\n\r\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Codes_container__zKOAw\",\"contain\":\"Codes_contain__-Thim\",\"back\":\"Codes_back__kOV3u\",\"codeSnippet\":\"Codes_codeSnippet__j2PXd\"};","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"\n}), 'ContentCopy');","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { messageActions } from '../../store/Message/message-slice';\r\nimport CodeEditorv3 from '../Question/Editor/CodeEditorv3';\r\nimport ButtonCustom from '../../compenents/Button/Button';\r\nimport { SERVER_LINK } from '../../dev-server-link';\r\nimport Options from '../Question/Options/Options';\r\nimport classes from './Codes.module.css';\r\n\r\nimport { ArrowBack, Check, ContentCopy } from '@mui/icons-material';\r\nimport { IconButton, Tooltip, Zoom } from '@mui/material';\r\n\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst Codes = () => {\r\n\r\n    const [response, setResponse] = useState('');\r\n    const [codeFontSize, setcodeFontSize] = useState(15);\r\n\r\n    const [searchParams] = useSearchParams();\r\n    const dispatch = useDispatch();\r\n\r\n    let filepath = null, language = null;\r\n    if (searchParams.get('filepath') && searchParams.get('language')) {\r\n        filepath = searchParams.get('filepath');\r\n        language = searchParams.get('language');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!filepath) return;\r\n        fetch(\r\n            `${SERVER_LINK}/api/explore/getcode`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify({ filepath })\r\n            }\r\n        )\r\n            .then(res => res.json())\r\n            .then(data => setResponse(data))\r\n            .catch(error => setResponse({\r\n                error: `server side error, check your network\r\n${error}`\r\n            }))\r\n    }, [filepath])\r\n\r\n    const [copied, setCopied] = useState(false);\r\n\r\n    if (copied === true)\r\n        setTimeout(() => setCopied(false), 2500);\r\n\r\n    const copyHandler = () => {\r\n        const result = copy(response.code);\r\n        const type = result ? 'success' : 'error';\r\n        const message = result ? 'Code copied successfully !' : 'There are some errors copying the code !';\r\n\r\n        dispatch(messageActions.set({ type, message }));\r\n        setCopied(true);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {!filepath && <div className='errorTemplate'><span>Error : </span>You should come to this page by clicking button on leader board / or might be possible that code for this query was never written/saved.</div>}\r\n            {response.error && <div className='errorTemplate'><span>Error : </span>{response.error}</div>}\r\n\r\n            {filepath && !response.error && (\r\n                <div className={classes.container}>\r\n                    <div className={classes.contain}>\r\n                        <div className={classes.back}>\r\n                            <div className={classes.codeSnippet}>\r\n                                &#60; go back to leaderboard /&#62;\r\n                            </div>\r\n                            <ButtonCustom to='/leaderboard' color='yellow'>\r\n                                <ArrowBack style={{ marginRight: '0.3em', transform: 'translateX(-12px)', fontSize: '1.2em' }} />\r\n                                Back\r\n                            </ButtonCustom>\r\n                        </div>\r\n                        <div style={{ position: 'absolute' }}>\r\n                            <Tooltip TransitionComponent={Zoom} title={copied ? 'Copied' : 'Copy'} placement='right'>\r\n                                <IconButton\r\n                                    onClick={copyHandler}\r\n                                    aria-label={copied ? 'Copied' : 'Copy'}\r\n                                >\r\n                                    {copied ? <Check /> : <ContentCopy />}\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                        <Options\r\n                            favStyle={{\r\n                                zIndex: '899',\r\n                                position: 'relative',\r\n                                left: '33%',\r\n                                bottom: '1rem'\r\n                            }}\r\n                            codeFontSize={codeFontSize}\r\n                            setcodeFontSize={setcodeFontSize}\r\n                        />\r\n                        <CodeEditorv3\r\n                            code={response.code}\r\n                            setCode={null}\r\n                            language={language}\r\n                            fontSize={codeFontSize}\r\n                            isReadOnly={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Codes;","import React from 'react'\r\n\r\nimport AceEditor from 'react-ace'\r\n\r\nimport \"ace-builds/webpack-resolver\"\r\n\r\nimport 'ace-builds/src-noconflict/mode-javascript'\r\nimport 'ace-builds/src-noconflict/mode-c_cpp'\r\nimport 'ace-builds/src-noconflict/mode-java'\r\nimport 'ace-builds/src-noconflict/mode-python'\r\n\r\nimport 'ace-builds/src-noconflict/theme-monokai'\r\nimport 'ace-builds/src-noconflict/ext-language_tools'\r\n\r\nconst CodeEditorv3 = props => {\r\n\r\n    const { code, setCode, language, fontSize, isReadOnly = false } = props;\r\n\r\n    let mode = 'c_cpp';\r\n    switch (language) {\r\n        case 'cpp':\r\n            mode = 'c_cpp';\r\n            break;\r\n        case 'java':\r\n            mode = 'java';\r\n            break;\r\n        case 'py':\r\n            mode = 'python';\r\n            break;\r\n        case 'js':\r\n            mode = 'javascript';\r\n            break;\r\n        default:\r\n            mode = 'c_cpp';\r\n    }\r\n\r\n    return (\r\n        <AceEditor\r\n            placeholder=\"Enter your code here\"\r\n            mode={mode}\r\n            theme=\"monokai\"\r\n            name=\"editorv3\"\r\n            onLoad={() => {\r\n                // console.log('loaded')\r\n            }}\r\n            onChange={value => setCode(value)}\r\n            fontSize={parseInt(fontSize)}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            readOnly={isReadOnly}\r\n            highlightActiveLine={true}\r\n            value={code}\r\n            width='100%'\r\n            setOptions={{\r\n                enableBasicAutocompletion: true,\r\n                enableLiveAutocompletion: true,\r\n                enableSnippets: false,\r\n                showLineNumbers: true,\r\n                tabSize: 4,\r\n            }}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default CodeEditorv3;","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Slider from '@mui/material/Slider';\r\nimport MuiInput from '@mui/material/Input';\r\n\r\nimport TextFields from '@mui/icons-material/TextFields';\r\n\r\nconst Input = styled(MuiInput)`\r\n  width: 42px;\r\n`;\r\n\r\nconst InputSlider = ({ codeFontSize: value, setcodeFontSize: setValue }) => {\r\n\r\n    const maxVal = 50, minVal = 5;\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n    };\r\n\r\n    const handleBlur = () => {\r\n        if (value < minVal) {\r\n            setValue(minVal);\r\n        } else if (value > maxVal) {\r\n            setValue(maxVal);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: 250, marginRight: '1rem' }}>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                    <TextFields />\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Slider\r\n                        value={value}\r\n                        onChange={handleSliderChange}\r\n                        aria-labelledby=\"input-slider\"\r\n                        min={minVal}\r\n                        max={maxVal}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Input\r\n                        value={value}\r\n                        size=\"small\"\r\n                        onChange={handleInputChange}\r\n                        onBlur={handleBlur}\r\n                        inputProps={{\r\n                            step: 10,\r\n                            min: minVal,\r\n                            max: maxVal,\r\n                            type: 'number',\r\n                            'aria-labelledby': 'input-slider',\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default InputSlider;","// extracted by mini-css-extract-plugin\nexport default {\"optionHeading\":\"Options_optionHeading__fdusp\",\"optionSnippet\":\"Options_optionSnippet__N0l+l\",\"fontSnippet\":\"Options_fontSnippet__fL-Vn\",\"changeFont\":\"Options_changeFont__gkV59\",\"resetCode\":\"Options_resetCode__dGw-D\"};","import Settings from '@mui/icons-material/Settings'\r\nimport { Button, Drawer, Fab, FormControl, InputLabel, MenuItem, Select } from '@mui/material'\r\nimport React, { Fragment, useState } from 'react'\r\nimport InputSlider from '../../../compenents/InputSlider/InputSlider'\r\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\r\n\r\nimport classes from './Options.module.css';\r\n\r\nconst Options = props => {\r\n\r\n    const {\r\n        favStyle,\r\n        resetCode,\r\n        codeFontSize,\r\n        selectedLang,\r\n        codeEditable,\r\n        setcodeFontSize,\r\n        setSelectedLang\r\n    } = props;\r\n\r\n    const [drawerOpen, toggleDrawerOpen] = useState(false);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Fab style={favStyle} onClick={() => toggleDrawerOpen(prev => !prev)} color=\"secondary\" aria-label=\"add\">\r\n                <div className={classes.optionSnippet}\r\n                    style={{\r\n                        top: '-1.5rem',\r\n                        whiteSpace: 'nowrap',\r\n                        textTransform: 'lowercase'\r\n                    }}\r\n                >\r\n                    &#60; change lang, font size, ... /&#62;\r\n                </div>\r\n                <Settings />\r\n            </Fab>\r\n            <Drawer\r\n                anchor='right'\r\n                open={drawerOpen}\r\n                onClose={() => toggleDrawerOpen(prev => !prev)}\r\n            >\r\n                <div style={{ width: '15rem', margin: '1rem' }}>\r\n                    <h1 className={classes.optionHeading} >Options</h1>\r\n\r\n\r\n                    <div className={classes.fontSnippet}>\r\n                        &#60; Font Size /&#62;\r\n                    </div>\r\n                    <div className={classes.changeFont}>\r\n                        <InputSlider codeFontSize={codeFontSize} setcodeFontSize={setcodeFontSize} />\r\n                    </div>\r\n                    {codeEditable &&\r\n                        <Fragment>\r\n                            <div className={classes.changeLang}>\r\n                                <FormControl>\r\n                                    <InputLabel id=\"changeLang-select-label\">Language</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"changeLang-select-label\"\r\n                                        id=\"changeLang-select\"\r\n                                        value={selectedLang}\r\n                                        label=\"Language\"\r\n                                        style={{ width: '8em', height: '2.8em' }}\r\n                                        onChange={e => setSelectedLang(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={'cpp'}>Cpp</MenuItem>\r\n                                        <MenuItem value={'py'}>Python</MenuItem>\r\n                                        {/* <MenuItem value={'java'}>JAVA</MenuItem> */}\r\n                                        {/* <MenuItem value={'js'}>JS</MenuItem> */}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={classes.resetCode}>\r\n                                <Button color=\"error\" onClick={resetCode} variant='contained' startIcon={\r\n                                    <RestartAltIcon fontSize='large' style={{ marginRight: '0.5em', fontSize: '2em' }} />\r\n                                } style={{ textTransform: 'capitalize' }}>\r\n                                    ResetCode\r\n                                </Button>\r\n                            </div>\r\n                        </Fragment>\r\n                    }\r\n                </div>\r\n            </Drawer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Options","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n"],"names":["props","handler","onClick","to","className","classes","color","children","createSvgIcon","_jsx","d","useState","response","setResponse","codeFontSize","setcodeFontSize","useSearchParams","searchParams","dispatch","useDispatch","filepath","language","get","useEffect","fetch","SERVER_LINK","headers","method","body","JSON","stringify","then","res","json","data","catch","error","copied","setCopied","setTimeout","Fragment","Button","ArrowBack","style","marginRight","transform","fontSize","position","Tooltip","TransitionComponent","Zoom","title","placement","IconButton","result","copy","code","type","message","messageActions","Check","ContentCopy","Options","favStyle","zIndex","left","bottom","CodeEditorv3","setCode","isReadOnly","mode","placeholder","theme","name","onLoad","onChange","value","parseInt","showPrintMargin","showGutter","readOnly","highlightActiveLine","width","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","Input","styled","MuiInput","setValue","Box","sx","Grid","container","spacing","alignItems","item","TextFields","xs","Slider","event","newValue","min","max","size","target","Number","onBlur","inputProps","step","resetCode","selectedLang","codeEditable","setSelectedLang","drawerOpen","toggleDrawerOpen","Fab","prev","top","whiteSpace","textTransform","Settings","Drawer","anchor","open","onClose","margin","FormControl","InputLabel","id","Select","labelId","label","height","e","MenuItem","variant","startIcon","RestartAlt","deselectCurrent","require","clipboardToIE11Formatting","module","exports","text","options","debug","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","ariaHidden","all","clip","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","appendChild","selectNodeContents","addRange","execCommand","Error","err","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","forEach","focus"],"sourceRoot":""}