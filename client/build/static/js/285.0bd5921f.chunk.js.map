{"version":3,"file":"static/js/285.0bd5921f.chunk.js","mappings":"mLAwDA,UAlDc,WACV,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAUC,EAAAA,EAAAA,MAAVD,MACJE,EAAW,KAAMC,EAAW,KA0BhC,OAzBIH,IACAE,EAAWF,EAAME,SACjBC,EAAWH,EAAMG,WAGrBC,EAAAA,EAAAA,YAAU,WACDF,GACLG,MAAM,GAAD,OACEC,EAAAA,EADF,wBAED,CACIC,QAAS,CACL,eAAgB,oBAEpBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAET,SAAAA,MAG1BU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIhB,EAAYgB,MACzBC,OAAM,SAAAC,GAAK,OAAIlB,EAAY,CACxBkB,MAAM,0CAAD,OACnBA,UAEK,CAACf,KAGA,UAAC,EAAAgB,SAAD,YAEMhB,IAAY,iBAAKiB,UAAU,gBAAf,WAA+B,uCAA/B,8IACbrB,EAASmB,QAAS,iBAAKE,UAAU,gBAAf,WAA+B,uCAAsBrB,EAASmB,SAG7Ef,IAAaJ,EAASmB,QAClB,SAAC,IAAD,CACIG,KAAMtB,EAASsB,KACfC,QAAS,KACTlB,SAAUA,EACVmB,SAAU,GACVC,YAAY,S,0HCiBpC,IAnDqB,SAAAC,GAEjB,IAAQJ,EAA0DI,EAA1DJ,KAAMC,EAAoDG,EAApDH,QAASlB,EAA2CqB,EAA3CrB,SAAUmB,EAAiCE,EAAjCF,SAAjC,EAAkEE,EAAvBD,WAAAA,OAA3C,SAEIE,EAAO,QACX,OAAQtB,GACJ,IAAK,MAYL,QACIsB,EAAO,cAVX,IAAK,OACDA,EAAO,OACP,MACJ,IAAK,KACDA,EAAO,SACP,MACJ,IAAK,KACDA,EAAO,aAMf,OACI,SAAC,KAAD,CACIC,YAAY,uBACZD,KAAMA,EACNE,MAAM,UACNC,KAAK,WACLC,OAAQ,aAGRC,SAAU,SAAAC,GAAK,OAAIV,EAAQU,IAC3BT,SAAUU,SAASV,GACnBW,iBAAiB,EACjBC,YAAY,EACZC,SAAUZ,EACVa,qBAAqB,EACrBL,MAAOX,EACPiB,MAAM,OACNC,WAAY,CACRC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS","sources":["pages/Codes/Codes.js","pages/Question/Editor/CodeEditorv3.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nimport { SERVER_LINK } from '../../dev-server-link';\r\nimport CodeEditorv3 from '../Question/Editor/CodeEditorv3';\r\n\r\nconst Codes = () => {\r\n    const [response, setResponse] = useState('');\r\n    const { state } = useLocation();\r\n    let filepath = null, language = null;\r\n    if (state) {\r\n        filepath = state.filepath;\r\n        language = state.language;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!filepath) return;\r\n        fetch(\r\n            `${SERVER_LINK}/api/explore/getcode`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify({ filepath })\r\n            }\r\n        )\r\n            .then(res => res.json())\r\n            .then(data => setResponse(data))\r\n            .catch(error => setResponse({\r\n                error: `server side error, check your network\r\n${error}`\r\n            }))\r\n    }, [filepath])\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {!filepath && <div className='errorTemplate'><span>Error : </span>You should come to this page by clicking button on leader board / or might be possible that code for this query was never written/saved.</div>}\r\n            {response.error && <div className='errorTemplate'><span>Error : </span>{response.error}</div>}\r\n\r\n            {\r\n                filepath && !response.error && (\r\n                    <CodeEditorv3\r\n                        code={response.code}\r\n                        setCode={null}\r\n                        language={language}\r\n                        fontSize={16}\r\n                        isReadOnly={true}\r\n                    />\r\n                )\r\n            }\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Codes;","import React from 'react'\r\n\r\nimport AceEditor from 'react-ace'\r\n\r\nimport \"ace-builds/webpack-resolver\"\r\n\r\nimport 'ace-builds/src-noconflict/mode-javascript'\r\nimport 'ace-builds/src-noconflict/mode-c_cpp'\r\nimport 'ace-builds/src-noconflict/mode-java'\r\nimport 'ace-builds/src-noconflict/mode-python'\r\n\r\nimport 'ace-builds/src-noconflict/theme-monokai'\r\nimport 'ace-builds/src-noconflict/ext-language_tools'\r\n\r\nconst CodeEditorv3 = props => {\r\n\r\n    const { code, setCode, language, fontSize, isReadOnly = false } = props;\r\n\r\n    let mode = 'c_cpp';\r\n    switch (language) {\r\n        case 'cpp':\r\n            mode = 'c_cpp';\r\n            break;\r\n        case 'java':\r\n            mode = 'java';\r\n            break;\r\n        case 'py':\r\n            mode = 'python';\r\n            break;\r\n        case 'js':\r\n            mode = 'javascript';\r\n            break;\r\n        default:\r\n            mode = 'c_cpp';\r\n    }\r\n\r\n    return (\r\n        <AceEditor\r\n            placeholder=\"Enter your code here\"\r\n            mode={mode}\r\n            theme=\"monokai\"\r\n            name=\"editorv3\"\r\n            onLoad={() => {\r\n                // console.log('loaded')\r\n            }}\r\n            onChange={value => setCode(value)}\r\n            fontSize={parseInt(fontSize)}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            readOnly={isReadOnly}\r\n            highlightActiveLine={true}\r\n            value={code}\r\n            width='100%'\r\n            setOptions={{\r\n                enableBasicAutocompletion: true,\r\n                enableLiveAutocompletion: true,\r\n                enableSnippets: false,\r\n                showLineNumbers: true,\r\n                tabSize: 4,\r\n            }}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default CodeEditorv3;"],"names":["useState","response","setResponse","state","useLocation","filepath","language","useEffect","fetch","SERVER_LINK","headers","method","body","JSON","stringify","then","res","json","data","catch","error","Fragment","className","code","setCode","fontSize","isReadOnly","props","mode","placeholder","theme","name","onLoad","onChange","value","parseInt","showPrintMargin","showGutter","readOnly","highlightActiveLine","width","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize"],"sourceRoot":""}