{"version":3,"file":"static/js/255.123d6984.chunk.js","mappings":"mJACA,GAAgB,IAAM,oBAAoB,KAAO,qBAAqB,MAAQ,sBAAsB,OAAS,wB,sBCY7G,EATe,SAAAA,GACX,IAAMC,EAAUD,EAAME,QAAUF,EAAME,QAAU,aAChD,OACI,SAAC,KAAD,CAAMA,QAASD,EAASE,GAAIH,EAAMG,GAAIC,UAAS,UAAKC,EAAAA,IAAL,YAAoBA,EAAQL,EAAMM,QAAjF,UACI,0BAAON,EAAMO,e,oJCPzB,EAA4B,yBAA5B,EAA4D,oBAA5D,EAA8F,2B,WC2E9F,EAlEc,WACV,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAUC,EAAAA,EAAAA,MAAVD,MACJE,EAAW,KAAMC,EAAW,KAC5BH,IACAE,EAAWF,EAAME,SACjBC,EAAWH,EAAMG,UAGrB,IAAMC,GAAYC,EAAAA,EAAAA,MAuBlB,OApBAC,EAAAA,EAAAA,YAAU,WACDJ,GACLK,MAAM,GAAD,OACEC,EAAAA,EADF,wBAED,CACIC,QAAS,CACL,eAAgB,oBAEpBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEX,SAAAA,MAG1BY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIlB,EAAYkB,MACzBC,OAAM,SAAAC,GAAK,OAAIpB,EAAY,CACxBoB,MAAM,0CAAD,OACnBA,UAEK,CAACjB,KAGA,UAAC,EAAAkB,SAAD,YAEMlB,IAAY,iBAAKT,UAAU,gBAAf,WAA+B,uCAA/B,8IACbK,EAASqB,QAAS,iBAAK1B,UAAU,gBAAf,WAA+B,uCAAsBK,EAASqB,SAG7EjB,IAAaJ,EAASqB,QAClB,gBAAK1B,UAAWC,EAAhB,UACI,iBAAK2B,MAAO,CAAEC,MAAO,OAArB,WACI,iBAAK7B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,0CAGA,UAAC6B,EAAA,EAAD,CAAc/B,GAAG,IAAID,QApC1B,kBAAMa,GAAW,IAoCkCT,MAAM,SAApD,WACI,SAAC6B,EAAA,EAAD,CAAeH,MAAO,CAAEI,YAAa,QAASC,UAAW,oBAAqBC,SAAU,WAD5F,cAKJ,SAACC,EAAA,EAAD,CACIC,KAAM/B,EAAS+B,KACfC,QAAS,KACT3B,SAAUA,EACVwB,SAAU,GACVI,YAAY,c,0HCD5C,IAnDqB,SAAA1C,GAEjB,IAAQwC,EAA0DxC,EAA1DwC,KAAMC,EAAoDzC,EAApDyC,QAAS3B,EAA2Cd,EAA3Cc,SAAUwB,EAAiCtC,EAAjCsC,SAAjC,EAAkEtC,EAAvB0C,WAAAA,OAA3C,SAEIC,EAAO,QACX,OAAQ7B,GACJ,IAAK,MAYL,QACI6B,EAAO,cAVX,IAAK,OACDA,EAAO,OACP,MACJ,IAAK,KACDA,EAAO,SACP,MACJ,IAAK,KACDA,EAAO,aAMf,OACI,SAAC,KAAD,CACIC,YAAY,uBACZD,KAAMA,EACNE,MAAM,UACNC,KAAK,WACLC,OAAQ,aAGRC,SAAU,SAAAC,GAAK,OAAIR,EAAQQ,IAC3BX,SAAUY,SAASZ,GACnBa,iBAAiB,EACjBC,YAAY,EACZC,SAAUX,EACVY,qBAAqB,EACrBL,MAAOT,EACPP,MAAM,OACNsB,WAAY,CACRC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS","sources":["webpack://client/./src/compenents/Button/Button.module.css?8b47","compenents/Button/Button.js","webpack://client/./src/pages/Codes/Codes.module.css?aca7","pages/Codes/Codes.js","pages/Question/Editor/CodeEditorv3.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__bCOnh\",\"blue\":\"Button_blue__uFsUF\",\"green\":\"Button_green__rEjag\",\"yellow\":\"Button_yellow__fkuwo\"};","import React from 'react'\r\nimport classes from './Button.module.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Button = props => {\r\n    const handler = props.onClick ? props.onClick : () => { };\r\n    return (\r\n        <Link onClick={handler} to={props.to} className={`${classes.btn} ${classes[props.color]}`}>\r\n            <span>{props.children}</span>\r\n        </Link >\r\n    )\r\n}\r\n\r\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Codes_container__zKOAw\",\"back\":\"Codes_back__kOV3u\",\"codeSnippet\":\"Codes_codeSnippet__j2PXd\"};","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router';\r\n\r\nimport { SERVER_LINK } from '../../dev-server-link';\r\nimport CodeEditorv3 from '../Question/Editor/CodeEditorv3';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport ButtonCustom from '../../compenents/Button/Button';\r\n\r\nimport classes from './Codes.module.css';\r\n\r\nconst Codes = () => {\r\n    const [response, setResponse] = useState('');\r\n    const { state } = useLocation();\r\n    let filepath = null, language = null;\r\n    if (state) {\r\n        filepath = state.filepath;\r\n        language = state.language;\r\n    }\r\n\r\n    const navigator = useNavigate();\r\n    const backBtnHandler = () => navigator(-1);\r\n\r\n    useEffect(() => {\r\n        if (!filepath) return;\r\n        fetch(\r\n            `${SERVER_LINK}/api/explore/getcode`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify({ filepath })\r\n            }\r\n        )\r\n            .then(res => res.json())\r\n            .then(data => setResponse(data))\r\n            .catch(error => setResponse({\r\n                error: `server side error, check your network\r\n${error}`\r\n            }))\r\n    }, [filepath])\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {!filepath && <div className='errorTemplate'><span>Error : </span>You should come to this page by clicking button on leader board / or might be possible that code for this query was never written/saved.</div>}\r\n            {response.error && <div className='errorTemplate'><span>Error : </span>{response.error}</div>}\r\n\r\n            {\r\n                filepath && !response.error && (\r\n                    <div className={classes.container}>\r\n                        <div style={{ width: '80%' }}>\r\n                            <div className={classes.back}>\r\n                                <div className={classes.codeSnippet}>\r\n                                    &#60; go back to leaderboard /&#62;\r\n                                </div>\r\n                                <ButtonCustom to='/' onClick={backBtnHandler} color='yellow'>\r\n                                    <ArrowBackIcon style={{ marginRight: '0.3em', transform: 'translateX(-12px)', fontSize: '1.2em' }} />\r\n                                    Back\r\n                                </ButtonCustom>\r\n                            </div>\r\n                            <CodeEditorv3\r\n                                code={response.code}\r\n                                setCode={null}\r\n                                language={language}\r\n                                fontSize={16}\r\n                                isReadOnly={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Codes;","import React from 'react'\r\n\r\nimport AceEditor from 'react-ace'\r\n\r\nimport \"ace-builds/webpack-resolver\"\r\n\r\nimport 'ace-builds/src-noconflict/mode-javascript'\r\nimport 'ace-builds/src-noconflict/mode-c_cpp'\r\nimport 'ace-builds/src-noconflict/mode-java'\r\nimport 'ace-builds/src-noconflict/mode-python'\r\n\r\nimport 'ace-builds/src-noconflict/theme-monokai'\r\nimport 'ace-builds/src-noconflict/ext-language_tools'\r\n\r\nconst CodeEditorv3 = props => {\r\n\r\n    const { code, setCode, language, fontSize, isReadOnly = false } = props;\r\n\r\n    let mode = 'c_cpp';\r\n    switch (language) {\r\n        case 'cpp':\r\n            mode = 'c_cpp';\r\n            break;\r\n        case 'java':\r\n            mode = 'java';\r\n            break;\r\n        case 'py':\r\n            mode = 'python';\r\n            break;\r\n        case 'js':\r\n            mode = 'javascript';\r\n            break;\r\n        default:\r\n            mode = 'c_cpp';\r\n    }\r\n\r\n    return (\r\n        <AceEditor\r\n            placeholder=\"Enter your code here\"\r\n            mode={mode}\r\n            theme=\"monokai\"\r\n            name=\"editorv3\"\r\n            onLoad={() => {\r\n                // console.log('loaded')\r\n            }}\r\n            onChange={value => setCode(value)}\r\n            fontSize={parseInt(fontSize)}\r\n            showPrintMargin={false}\r\n            showGutter={true}\r\n            readOnly={isReadOnly}\r\n            highlightActiveLine={true}\r\n            value={code}\r\n            width='100%'\r\n            setOptions={{\r\n                enableBasicAutocompletion: true,\r\n                enableLiveAutocompletion: true,\r\n                enableSnippets: false,\r\n                showLineNumbers: true,\r\n                tabSize: 4,\r\n            }}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default CodeEditorv3;"],"names":["props","handler","onClick","to","className","classes","color","children","useState","response","setResponse","state","useLocation","filepath","language","navigator","useNavigate","useEffect","fetch","SERVER_LINK","headers","method","body","JSON","stringify","then","res","json","data","catch","error","Fragment","style","width","Button","ArrowBack","marginRight","transform","fontSize","CodeEditorv3","code","setCode","isReadOnly","mode","placeholder","theme","name","onLoad","onChange","value","parseInt","showPrintMargin","showGutter","readOnly","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize"],"sourceRoot":""}