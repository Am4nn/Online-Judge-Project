{"version":3,"file":"static/js/911.3ff3b10c.chunk.js","mappings":"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","sources":["webpack://client/./src/compenents/Customform/Customform.module.css?c3ca","hooks/use-input.js","compenents/Customform/Customform.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Auth-form-container\":\"Customform_Auth-form-container__m-f+Z\",\"Auth-form\":\"Customform_Auth-form__saddl\",\"Auth-form-content\":\"Customform_Auth-form-content__-xpDf\",\"Auth-form-title\":\"Customform_Auth-form-title__iOTCc\",\"errormsg\":\"Customform_errormsg__lAE9B\"};","import { useReducer } from 'react';\r\n\r\nconst initialInputState = {\r\n    value: '',\r\n    isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n    if (action.type === 'INPUT') {\r\n        return { value: action.value, isTouched: state.isTouched };\r\n    }\r\n    if (action.type === 'BLUR') {\r\n        return { isTouched: true, value: state.value };\r\n    }\r\n    if (action.type === 'RESET') {\r\n        return { isTouched: false, value: '' };\r\n    }\r\n    return inputStateReducer;\r\n};\r\n\r\nconst useInput = (validateValue) => {\r\n    const [inputState, dispatch] = useReducer(\r\n        inputStateReducer,\r\n        initialInputState\r\n    );\r\n\r\n    const valueIsValid = validateValue(inputState.value);\r\n    const hasError = !valueIsValid && inputState.isTouched;\r\n\r\n    const valueChangeHandler = (event) => {\r\n        dispatch({ type: 'INPUT', value: event.target.value });\r\n    };\r\n\r\n    const inputBlurHandler = (event) => {\r\n        dispatch({ type: 'BLUR' });\r\n    };\r\n\r\n    const reset = () => {\r\n        dispatch({ type: 'RESET' });\r\n    };\r\n\r\n    return {\r\n        value: inputState.value,\r\n        isValid: valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset,\r\n    };\r\n};\r\n\r\nexport default useInput;","import React, { useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport classes from './Customform.module.css'\r\nimport useInput from '../../hooks/use-input'\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { login, register } from '../../store/auth-actions'\r\nimport { authActions } from '../../store/auth-slice'\r\n\r\nconst Customform = props => {\r\n\r\n    const { pageType } = props; // login, register\r\n\r\n    const dispatch = useDispatch();\r\n    const navigator = useNavigate();\r\n    const loginState = useSelector(state => state.auth);\r\n\r\n    if (loginState.loggedIn) {\r\n        // this block never runs, as /login and /register routes get disabled\r\n        console.log(`${pageType === 'login' ? 'Logged In' : 'Registered'} Successfully`);\r\n        dispatch(authActions.setError({ error: undefined }));\r\n        navigator('/questions');\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(`${pageType} page`);\r\n        return () => dispatch(authActions.setError({ error: undefined }));\r\n    }, [dispatch, pageType]);\r\n\r\n    const {\r\n        value: name,\r\n        isValid: isNameValid,\r\n        hasError: hasNameError,\r\n        valueChangeHandler: nameChangeHandler,\r\n        inputBlurHandler: nameBlurHandler,\r\n    } = useInput(value => (value.trim() !== '' && value.length < 10));\r\n\r\n    const {\r\n        value: email,\r\n        isValid: isEmailValid,\r\n        hasError: hasEmailError,\r\n        valueChangeHandler: emailChangeHandler,\r\n        inputBlurHandler: emailBlurHandler,\r\n    } = useInput(value => (/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)));\r\n\r\n    const {\r\n        value: password,\r\n        isValid: isPassValid,\r\n        hasError: hasPassError,\r\n        valueChangeHandler: passChangeHandler,\r\n        inputBlurHandler: passBlurHandler,\r\n        reset: resetPass\r\n    } = useInput(value => (value.length >= 6));\r\n\r\n    const {\r\n        value: passwordVer,\r\n        isValid: isPassVerValid,\r\n        hasError: hasPassVerError,\r\n        valueChangeHandler: passVerChangeHandler,\r\n        inputBlurHandler: passVerBlurHandler,\r\n        reset: resetPassVer\r\n    } = useInput(value => (value.length >= 6 && value === password));\r\n\r\n    const isFormValid = isEmailValid && isPassValid && (pageType === 'login' || (isNameValid && isPassVerValid));\r\n\r\n    const loginHandler = () => {\r\n        // console.log('login data : ', email, password);\r\n        dispatch(login(email, password));\r\n    }\r\n    const registerHandler = () => {\r\n        // console.log('register data : ', name, email, password, passwordVer);\r\n        dispatch(register(name, email, password, passwordVer));\r\n    }\r\n\r\n    const formSubmitHandler = event => {\r\n        event.preventDefault();\r\n\r\n        if (!isFormValid) return;\r\n        if (pageType === 'login') loginHandler();\r\n        else if (pageType === 'register') registerHandler();\r\n\r\n        resetPass();\r\n        resetPassVer();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes[\"Auth-form-container\"]}>\r\n            <form className={classes[\"Auth-form\"]} onSubmit={formSubmitHandler}>\r\n                <div className={classes[\"Auth-form-content\"]}>\r\n                    <h3 className={classes[\"Auth-form-title\"]}>\r\n                        {pageType === 'login' ? 'Sign In' : 'Sign Up'}\r\n                    </h3>\r\n                    <div className=\"text-center\">\r\n                        {pageType === 'login' ? \"Don't have an account? \" : 'Already have an account '}\r\n\r\n                        <Link to={pageType === 'login' ? '/register' : '/login'} className=\"link-primary\">\r\n                            {pageType === 'login' ? 'Sign Up' : 'Sign In'}\r\n                        </Link>\r\n                    </div>\r\n\r\n                    {pageType === 'register' &&\r\n                        <div className='form-group mt-4'>\r\n                            <TextField\r\n                                id='name'\r\n                                type='text'\r\n                                label=\"Name\"\r\n                                variant=\"filled\"\r\n                                placeholder='Less than 10 characters'\r\n                                onChange={nameChangeHandler}\r\n                                onBlur={nameBlurHandler}\r\n                                value={name}\r\n                                sx={hasNameError ? {\r\n                                    backgroundColor: '#fddddd',\r\n                                } : {}}\r\n                            />\r\n                        </div>\r\n                    }\r\n\r\n                    <div className='form-group mt-4'>\r\n                        <TextField\r\n                            id='email'\r\n                            type='email'\r\n                            label=\"Email\"\r\n                            placeholder='Enter valid Email'\r\n                            variant=\"filled\"\r\n                            onBlur={emailBlurHandler}\r\n                            onChange={emailChangeHandler}\r\n                            value={email}\r\n                            sx={hasEmailError ? {\r\n                                backgroundColor: '#fddddd',\r\n                            } : {}}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='form-group mt-3'>\r\n                        <TextField\r\n                            id='password'\r\n                            type='password'\r\n                            label=\"Password\"\r\n                            placeholder='Minimum Length 6'\r\n                            variant=\"filled\"\r\n                            onBlur={passBlurHandler}\r\n                            onChange={passChangeHandler}\r\n                            value={password}\r\n                            sx={hasPassError ? {\r\n                                backgroundColor: '#fddddd',\r\n                            } : {}}\r\n                        />\r\n                    </div>\r\n\r\n                    {pageType === 'register' &&\r\n                        <div className='form-group mt-3'>\r\n                            <TextField\r\n                                id='passwordVerify'\r\n                                type='password'\r\n                                label=\"Re-Enter Password\"\r\n                                placeholder='Same as password'\r\n                                variant=\"filled\"\r\n                                onBlur={passVerBlurHandler}\r\n                                onChange={passVerChangeHandler}\r\n                                value={passwordVer}\r\n                                sx={hasPassVerError ? {\r\n                                    backgroundColor: '#fddddd',\r\n                                } : {}}\r\n                            />\r\n                        </div>\r\n                    }\r\n\r\n                    <div className=\"d-grid gap-2 mt-4 mb-3\">\r\n                        <Button\r\n                            type='submit'\r\n                            color='info'\r\n                            variant=\"contained\"\r\n                            disabled={!isFormValid || loginState.isLoading}\r\n                            style={{\r\n                                textTransform: 'capitalize',\r\n                                letterSpacing: '0.15rem',\r\n                                fontSize: '1rem'\r\n                            }}\r\n                        >\r\n                            {pageType === 'login' ? 'Login' : 'Register'}\r\n                            {loginState && (loginState.isLoading || loginState.loggedIn) && <div className='spin' />}\r\n                        </Button>\r\n                    </div>\r\n\r\n\r\n                    {loginState && loginState.error && (\r\n                        <div className={classes.errormsg}>\r\n                            {loginState.error}\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className='text-muted'>\r\n                        Email must be valid and Password length must be greater than or equal to 6 to submit.\r\n                    </div>\r\n                </div>\r\n            </form >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Customform;"],"names":["initialInputState","value","isTouched","inputStateReducer","state","action","type","validateValue","useReducer","inputState","dispatch","valueIsValid","hasError","isValid","valueChangeHandler","event","target","inputBlurHandler","reset","props","pageType","useDispatch","navigator","useNavigate","loginState","useSelector","auth","loggedIn","console","log","authActions","error","undefined","useEffect","useInput","trim","length","name","isNameValid","hasNameError","nameChangeHandler","nameBlurHandler","test","email","isEmailValid","hasEmailError","emailChangeHandler","emailBlurHandler","password","isPassValid","hasPassError","passChangeHandler","passBlurHandler","resetPass","passwordVer","isPassVerValid","hasPassVerError","passVerChangeHandler","passVerBlurHandler","resetPassVer","isFormValid","className","classes","onSubmit","preventDefault","login","register","to","TextField","id","label","variant","placeholder","onChange","onBlur","sx","backgroundColor","Button","color","disabled","isLoading","style","textTransform","letterSpacing","fontSize"],"sourceRoot":""}