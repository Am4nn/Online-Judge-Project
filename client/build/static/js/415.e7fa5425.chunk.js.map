{"version":3,"file":"static/js/415.e7fa5425.chunk.js","mappings":"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","sources":["pages/ServerLogs/ServerLogs.js"],"sourcesContent":["import React, { useState, useEffect, Fragment, useRef } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, Fab, Paper, Box } from '@mui/material';\r\nimport { KeyboardArrowDown, KeyboardDoubleArrowLeft, KeyboardDoubleArrowRight, Visibility } from '@mui/icons-material';\r\nimport { v4 } from 'uuid';\r\nimport io from 'socket.io-client';\r\nimport { SERVER_LINK } from '../../dev-server-link';\r\nimport './ServerLogs.css';\r\nimport LoadingSpinner from './../../compenents/LoadingSpinner/LoadingSpinner';\r\n\r\nconst ServerLogs = () => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(undefined);\r\n    const [stdout, setStdout] = useState({});\r\n    const [stderr, setStderr] = useState({});\r\n    const [isOut, setIsOut] = useState(true);\r\n    const endRef = useRef(null);\r\n    const [pageNo, setPageNo] = useState(1);\r\n\r\n    useFetchServerLogs(setLoading, setError, setStderr, setStdout, pageNo);\r\n    useServerLogsSocket(setStdout, setStderr);\r\n    useColorTokens([isOut, stderr, stdout]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Tools\r\n                endRef={endRef} isOut={isOut} pageNo={pageNo}\r\n                setIsOut={setIsOut} setPageNo={setPageNo}\r\n            />\r\n            {loading && <LoadingSpinner />}\r\n            {!loading && error && <div className='errorTemplate' style={{ width: '70vw' }}>\r\n                <div><span>Msg : </span>{error.msg}</div>\r\n                {error && <div><span>Error : </span>{JSON.stringify(error.error)}</div>}\r\n            </div>}\r\n            {!loading && !error && (\r\n                <Fragment>\r\n                    <pre id='out-pre' style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'flex-start',\r\n                        margin: '6rem 1rem',\r\n                        fontSize: '0.6rem'\r\n                    }}>\r\n                        {isOut ?\r\n                            [...stdout].reverse().map(txt => (\r\n                                <div key={txt.id}>{txt.msg}</div>\r\n                            )) :\r\n                            stderr.map(txt => (\r\n                                <div key={txt.id}>{txt.msg}</div>\r\n                            ))\r\n                        }\r\n                    </pre>\r\n                    <div ref={endRef} aria-hidden />\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nconst useServerLogsSocket = (setStdout, setStderr) => {\r\n    const loginState = useSelector(state => state.auth);\r\n    useEffect(() => {\r\n        if (!loginState.isAdmin) return;\r\n        const newSocket = io(SERVER_LINK, { query: { id: v4() } });\r\n        newSocket.on('logger-new-log', msg => {\r\n            setStdout(prev => [...prev, { msg, id: v4() }])\r\n        });\r\n        newSocket.on('logger-new-error', msg => {\r\n            setStderr(prev => [...prev, { msg, id: v4() }])\r\n        });\r\n        return () => newSocket.close();\r\n    }, [loginState.username, loginState.isAdmin, setStdout, setStderr]);\r\n}\r\n\r\nconst useFetchServerLogs = (setLoading, setError, setStderr, setStdout, pageNo) => {\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setError(undefined);\r\n        fetch(\r\n            `${SERVER_LINK}/api/experimental/logs?pageNo=${pageNo}`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            }\r\n        )\r\n            .then(async response => {\r\n                if (response.ok) return response.json();\r\n                const json = await response.json();\r\n                return await Promise.reject(json);\r\n            })\r\n            .then(res => {\r\n                setStdout(res.stdoutTxt.trim().split('\\n').map(txt => ({ msg: txt, id: v4() })));\r\n                setStderr(res.stderrTxt.trim().split('\\n').map(txt => ({ msg: txt, id: v4() })));\r\n            })\r\n            .catch(setError)\r\n            .finally(() => setLoading(false))\r\n    }, [setLoading, setError, setStderr, setStdout, pageNo]);\r\n}\r\n\r\nconst useColorTokens = dependency => {\r\n    useEffect(() => {\r\n        // setting timeout so that this process don't block rendering\r\n        const timeoutId = setTimeout(() => {\r\n            const outPre = document.getElementById('out-pre');\r\n            if (!outPre) return;\r\n            // tokens: [searchKey, className, regexFlags]\r\n            [...outPre.childNodes].every(child => {\r\n                if (child.getAttribute(\"tokenized\") === \"ok\") return false;\r\n                child.innerHTML = tokenize(child.innerHTML);\r\n                child.setAttribute(\"tokenized\", \"ok\");\r\n                return true;\r\n            });\r\n        }, 10);\r\n        return () => clearTimeout(timeoutId);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, dependency);\r\n}\r\n\r\n// searchKey, className, regexFlags\r\nconst tokens = [\r\n    ['GET', 'get', 'g'],\r\n    ['POST', 'post', 'g'],\r\n    ['PUT', 'put', 'g'],\r\n    ['DELETE', 'delete', 'g'],\r\n    ['Unlinked', 'unlinked', 'g'],\r\n    ['PORT', 'port', 'g'],\r\n    ['Database', 'database', 'g'],\r\n    ['Production', 'production', 'g'],\r\n    ['Note:', 'note', 'g'],\r\n    ['Add Note', 'addnote', 'g'],\r\n    ['Edit Note', 'editnote', 'g'],\r\n    ['Delete Note', 'deletenote', 'g'],\r\n    ['Containers', 'containers', 'g'],\r\n    ['Deleted', 'deleted', 'g'],\r\n    ['Error', 'error', 'g'],\r\n    ['failed', 'failed', 'g'],\r\n    ['LOG', 'log', 'g'],\r\n];\r\n\r\nconst tokenize = text => {\r\n    tokens.forEach(tokenDetail => (\r\n        text = text.replace(new RegExp(tokenDetail[0], tokenDetail[2]), `<span class='token token-${tokenDetail[1]}'>${tokenDetail[0]}</span>`)\r\n    ));\r\n    const timeVar = text.match('[0-9]+/[0-9]+/[0-9]+, [0-9]+:[0-9]+:[0-9]+ [a-zA-Z][a-zA-Z]');\r\n    timeVar && (text = text.replace(timeVar[0], `<span class='token-time'>${timeVar[0]}</span>`));\r\n    return text;\r\n}\r\n\r\nconst Tools = ({ setIsOut, isOut, endRef, setPageNo, pageNo }) => {\r\n    return (\r\n        <Fragment>\r\n            <Button\r\n                variant='contained'\r\n                color='success'\r\n                onClick={() => setIsOut(prev => !prev)}\r\n                sx={{ position: 'fixed', top: '5em', right: '1em', textTransform: 'capitalize', opacity: '0.9' }}\r\n                startIcon={<Visibility />}\r\n            >\r\n                {isOut ? 'show stderr' : 'show stdout'}\r\n            </Button>\r\n            <Box sx={{ position: 'fixed', display: 'flex', top: '8em', right: '1em', opacity: '0.9' }} >\r\n                <Fab onClick={() => setPageNo(prev => (prev === 1 ? 1 : prev - 1))} size=\"small\" color=\"primary\" aria-label=\"add\">\r\n                    <KeyboardDoubleArrowLeft />\r\n                </Fab>\r\n                <Paper elevation={3} sx={{ width: '35px', height: '35px', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '1.2em', margin: '0 0.2em' }} >{pageNo}</Paper>\r\n                <Fab onClick={() => setPageNo(prev => prev + 1)} size=\"small\" color=\"primary\" aria-label=\"add\">\r\n                    <KeyboardDoubleArrowRight />\r\n                </Fab>\r\n            </Box>\r\n            <Fab onClick={() => {\r\n                endRef.current && endRef.current.scrollIntoView();\r\n            }} style={{\r\n                position: 'fixed', bottom: '4.5em', right: '1em', opacity: '0.9'\r\n            }} size=\"small\" color=\"primary\" aria-label=\"add\">\r\n                <KeyboardArrowDown />\r\n            </Fab>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ServerLogs;\r\n"],"names":["useServerLogsSocket","setStdout","setStderr","loginState","useSelector","state","auth","useEffect","isAdmin","newSocket","io","SERVER_LINK","query","id","v4","on","msg","prev","close","username","useFetchServerLogs","setLoading","setError","pageNo","undefined","fetch","headers","method","credentials","then","response","ok","json","Promise","reject","res","stdoutTxt","trim","split","map","txt","stderrTxt","catch","finally","useColorTokens","dependency","timeoutId","setTimeout","outPre","document","getElementById","childNodes","every","child","getAttribute","innerHTML","tokenize","setAttribute","clearTimeout","tokens","text","forEach","tokenDetail","replace","RegExp","timeVar","match","Tools","setIsOut","isOut","endRef","setPageNo","Fragment","Button","variant","color","onClick","sx","position","top","right","textTransform","opacity","startIcon","Visibility","Box","display","Fab","size","KeyboardDoubleArrowLeft","Paper","elevation","width","height","alignItems","justifyContent","fontSize","margin","KeyboardDoubleArrowRight","current","scrollIntoView","style","bottom","KeyboardArrowDown","useState","loading","error","stdout","stderr","useRef","LoadingSpinner","className","JSON","stringify","flexDirection","reverse","ref"],"sourceRoot":""}