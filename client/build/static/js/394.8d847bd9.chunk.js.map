{"version":3,"file":"static/js/394.8d847bd9.chunk.js","mappings":"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","sources":["webpack://client/./src/compenents/Button/Button.module.css?8b47","compenents/Button/Button.js","pages/Question/Editor/CodeEditorv3.js","compenents/InputSlider/InputSlider.js","webpack://client/./src/pages/Question/Options/Options.module.css?dacc","pages/Question/Options/Options.js","webpack://client/./src/pages/Question/Question.module.css?e453","hooks/useAsync.js","hooks/useFetch.js","hooks/useLocalStorage.js","pages/Question/defaultCodes/defaultCodes.js","pages/Question/Question.js","../node_modules/@mui/icons-material/ArrowBack.js","../node_modules/@mui/icons-material/Send.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__bCOnh\",\"skyblue\":\"Button_skyblue__rNZpw\",\"blue\":\"Button_blue__uFsUF\",\"grey\":\"Button_grey__-4fWo\",\"green\":\"Button_green__rEjag\",\"yellow\":\"Button_yellow__fkuwo\"};","import React from 'react'\r\nimport classes from './Button.module.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Button = props => {\r\n    const handler = props.onClick ? props.onClick : () => { };\r\n    return (\r\n        <Link onClick={handler} to={props.to} className={`${classes.btn} ${classes[props.color]}`}>\r\n            <span>{props.children}</span>\r\n        </Link >\r\n    )\r\n}\r\n\r\nexport default Button;","import React, { Fragment } from 'react'\r\n\r\nimport AceEditor from 'react-ace'\r\n\r\nimport \"ace-builds/webpack-resolver\"\r\n\r\nimport 'ace-builds/src-noconflict/mode-javascript'\r\nimport 'ace-builds/src-noconflict/mode-c_cpp'\r\nimport 'ace-builds/src-noconflict/mode-java'\r\nimport 'ace-builds/src-noconflict/mode-python'\r\n\r\nimport 'ace-builds/src-noconflict/theme-monokai'\r\nimport 'ace-builds/src-noconflict/ext-language_tools'\r\n\r\nconst CodeEditorv3 = props => {\r\n\r\n    const { code, setCode, language, fontSize, isReadOnly = false, isLoading = false } = props;\r\n\r\n    let mode = 'c_cpp';\r\n    switch (language) {\r\n        case 'cpp':\r\n            mode = 'c_cpp';\r\n            break;\r\n        case 'java':\r\n            mode = 'java';\r\n            break;\r\n        case 'py':\r\n            mode = 'python';\r\n            break;\r\n        case 'js':\r\n            mode = 'javascript';\r\n            break;\r\n        default:\r\n            mode = 'c_cpp';\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading && <div style={{ position: 'absolute', zIndex: 10, display: 'flex', alignItems: 'center', pointerEvents: 'none', translate: '0 1rem' }}>\r\n                <div className='spin' />\r\n                <span style={{ fontSize: '1.8rem', color: 'rgba(128, 128, 128, 0.8)', fontWeight: 500, marginLeft: '1rem' }}>Loading Code...</span>\r\n            </div>}\r\n            <AceEditor\r\n                placeholder=\"Enter your code here\"\r\n                mode={mode}\r\n                theme=\"monokai\"\r\n                name=\"editorv3\"\r\n                onLoad={() => {\r\n                    // console.log('loaded')\r\n                }}\r\n                onChange={value => setCode(value)}\r\n                fontSize={parseInt(fontSize)}\r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                readOnly={isReadOnly}\r\n                highlightActiveLine={true}\r\n                value={code}\r\n                width='100%'\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: false,\r\n                    showLineNumbers: true,\r\n                    tabSize: 4,\r\n                }}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CodeEditorv3;","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Slider from '@mui/material/Slider';\r\nimport MuiInput from '@mui/material/Input';\r\n\r\nimport TextFields from '@mui/icons-material/TextFields';\r\n\r\nconst Input = styled(MuiInput)`\r\n  width: 42px;\r\n`;\r\n\r\nconst InputSlider = ({ codeFontSize: value, setcodeFontSize: setValue }) => {\r\n\r\n    const maxVal = 50, minVal = 5;\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n    };\r\n\r\n    const handleBlur = () => {\r\n        if (value < minVal) {\r\n            setValue(minVal);\r\n        } else if (value > maxVal) {\r\n            setValue(maxVal);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: 250, marginRight: '1rem' }}>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                    <TextFields />\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Slider\r\n                        value={value}\r\n                        onChange={handleSliderChange}\r\n                        aria-labelledby=\"input-slider\"\r\n                        min={minVal}\r\n                        max={maxVal}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Input\r\n                        value={value}\r\n                        size=\"small\"\r\n                        onChange={handleInputChange}\r\n                        onBlur={handleBlur}\r\n                        inputProps={{\r\n                            step: 10,\r\n                            min: minVal,\r\n                            max: maxVal,\r\n                            type: 'number',\r\n                            'aria-labelledby': 'input-slider',\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default InputSlider;","// extracted by mini-css-extract-plugin\nexport default {\"optionHeading\":\"Options_optionHeading__fdusp\",\"optionSnippet\":\"Options_optionSnippet__N0l+l\",\"fontSnippet\":\"Options_fontSnippet__fL-Vn\",\"changeFont\":\"Options_changeFont__gkV59\",\"resetCode\":\"Options_resetCode__dGw-D\"};","import Settings from '@mui/icons-material/Settings'\r\nimport { Button, Drawer, Fab, FormControl, InputLabel, MenuItem, Select } from '@mui/material'\r\nimport React, { Fragment, useState } from 'react'\r\nimport InputSlider from '../../../compenents/InputSlider/InputSlider'\r\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\r\n\r\nimport classes from './Options.module.css';\r\n\r\nconst Options = props => {\r\n\r\n    const {\r\n        favStyle,\r\n        resetCode,\r\n        codeFontSize,\r\n        selectedLang,\r\n        codeEditable,\r\n        setcodeFontSize,\r\n        setSelectedLang\r\n    } = props;\r\n\r\n    const [drawerOpen, toggleDrawerOpen] = useState(false);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Fab style={favStyle} onClick={() => toggleDrawerOpen(prev => !prev)} color=\"secondary\" aria-label=\"add\">\r\n                <div className={classes.optionSnippet}\r\n                    style={{\r\n                        top: '-1.5rem',\r\n                        whiteSpace: 'nowrap',\r\n                        textTransform: 'lowercase'\r\n                    }}\r\n                >\r\n                    &#60; change lang, font size, ... /&#62;\r\n                </div>\r\n                <Settings />\r\n            </Fab>\r\n            <Drawer\r\n                anchor='right'\r\n                open={drawerOpen}\r\n                onClose={() => toggleDrawerOpen(prev => !prev)}\r\n            >\r\n                <div style={{ width: '15rem', margin: '1rem' }}>\r\n                    <h1 className={classes.optionHeading} >Options</h1>\r\n\r\n\r\n                    <div className={classes.fontSnippet}>\r\n                        &#60; Font Size /&#62;\r\n                    </div>\r\n                    <div className={classes.changeFont}>\r\n                        <InputSlider codeFontSize={codeFontSize} setcodeFontSize={setcodeFontSize} />\r\n                    </div>\r\n                    {codeEditable &&\r\n                        <Fragment>\r\n                            <div className={classes.changeLang}>\r\n                                <FormControl>\r\n                                    <InputLabel id=\"changeLang-select-label\">Language</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"changeLang-select-label\"\r\n                                        id=\"changeLang-select\"\r\n                                        value={selectedLang}\r\n                                        label=\"Language\"\r\n                                        style={{ width: '8em', height: '2.8em' }}\r\n                                        onChange={e => setSelectedLang(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={'cpp'}>Cpp</MenuItem>\r\n                                        <MenuItem value={'py'}>Python</MenuItem>\r\n                                        {/* <MenuItem value={'java'}>JAVA</MenuItem> */}\r\n                                        {/* <MenuItem value={'js'}>JS</MenuItem> */}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={classes.resetCode}>\r\n                                <Button color=\"error\" onClick={resetCode} variant='contained' startIcon={\r\n                                    <RestartAltIcon fontSize='large' style={{ marginRight: '0.5em', fontSize: '2em' }} />\r\n                                } style={{ textTransform: 'capitalize' }}>\r\n                                    ResetCode\r\n                                </Button>\r\n                            </div>\r\n                        </Fragment>\r\n                    }\r\n                </div>\r\n            </Drawer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Options","// extracted by mini-css-extract-plugin\nexport default {\"contain\":\"Question_contain__ru8ZR\",\"back\":\"Question_back__7ToYX\",\"backbtn\":\"Question_backbtn__McrNp\",\"head\":\"Question_head__vSsr6\",\"heading\":\"Question_heading__vFozC\",\"extraContent\":\"Question_extraContent__AOXKy\",\"level\":\"Question_level__ahdFX\",\"succ\":\"Question_succ__4rRkC\",\"subm\":\"Question_subm__Bngpp\",\"body\":\"Question_body__2pvp1\",\"desc\":\"Question_desc__q5tcb\",\"example\":\"Question_example__leq4o\",\"editor\":\"Question_editor__Hwp6K\",\"editorText\":\"Question_editorText__AKyPE\",\"submitBtn\":\"Question_submitBtn__5Zi8p\",\"notHead\":\"Question_notHead__SujD4\",\"spin\":\"Question_spin__6AOi9\",\"spinner\":\"Question_spinner__T1Fdi\",\"codeSnippet\":\"Question_codeSnippet__DTFr1\",\"response\":\"Question_response__YRftG\"};","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport default function useAsync(callback, dependencies = []) {\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState()\r\n  const [value, setValue] = useState()\r\n\r\n  const callbackMemoized = useCallback(() => {\r\n    setLoading(true)\r\n    setError(undefined)\r\n    setValue(undefined)\r\n    callback()\r\n      .then(setValue)\r\n      .catch(setError)\r\n      .finally(() => setLoading(false))\r\n  }, dependencies)\r\n\r\n  useEffect(() => {\r\n    callbackMemoized()\r\n  }, [callbackMemoized])\r\n\r\n  return { loading, error, value }\r\n}\r\n","import useAsync from \"./useAsync\"\r\n\r\nconst DEFAULT_OPTIONS = {\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n}\r\n\r\nexport default function useFetch(url, options = {}, dependencies = []) {\r\n    return useAsync(() => {\r\n        return fetch(url, { ...DEFAULT_OPTIONS, ...options }).then(res => {\r\n            if (res.ok) return res.json()\r\n            return res.json().then(json => Promise.reject(json))\r\n        })\r\n    }, dependencies)\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(key)\r\n        if (jsonValue != null) return JSON.parse(jsonValue)\r\n        return initialValue\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }, [key, value])\r\n\r\n    return [value, setValue]\r\n}\r\n\r\nexport default useLocalStorage;","export const defaultCppCode =\r\n    `#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    cout << \"Hello World\" << endl;\r\n    return 0;\r\n}\r\n`;\r\n\r\nexport const defaultJsCode =\r\n    `console.log(\"Hello World\")\r\n`;\r\n\r\nexport const defaultPythonCode =\r\n    `print(\"Hello World\")\r\n`;","import React, { Fragment, useRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport classes from './Question.module.css';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport CodeEditorv3 from './Editor/CodeEditorv3';\r\nimport ButtonCustom from '../../compenents/Button/Button';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport LoadingSpinner from '../../compenents/LoadingSpinner/LoadingSpinner';\r\n\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nimport { SERVER_LINK } from '../../dev-server-link';\r\nimport { defaultCppCode, defaultPythonCode } from './defaultCodes/defaultCodes';\r\nimport Options from './Options/Options';\r\n\r\nconst Question = () => {\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const { id } = useParams();\r\n\r\n    const { loading, error, value: question } = useFetch(\r\n        `${SERVER_LINK}/api/explore/problems/${id}`,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'GET',\r\n        },\r\n        [id]\r\n    )\r\n\r\n    // not-initialized, submitting, response-ok, response-not-ok, error\r\n    // not-initialized, submitting, submitted\r\n    const [codeSubmittingState, setcodeSubmittingState] = useState('not-initialized');\r\n\r\n    const [codeFontSize, setcodeFontSize] = useState(15);\r\n    const [selectedLang, setSelectedLang] = useLocalStorage('selectedlangoj', 'cpp');\r\n    const [code, setCode] = useState(() => (selectedLang === 'cpp' ? defaultCppCode : defaultPythonCode));\r\n    const [response, setResponse] = useState([]);\r\n\r\n    const endRef = useRef(null);\r\n\r\n    const submitHandler = async event => {\r\n        event.preventDefault();\r\n\r\n        if (codeSubmittingState === 'submitting') return;\r\n\r\n        console.log('submitting code');\r\n        setcodeSubmittingState('submitting');\r\n\r\n        try {\r\n            const query = await fetch(\r\n                `${SERVER_LINK}/api/explore/problems/${id}`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                    body: JSON.stringify({ code, language: selectedLang, testcase: question.testcase, quesName: question.name })\r\n                }\r\n            );\r\n            const queryData = await query.json();\r\n            setResponse(queryData);\r\n\r\n            if (query.ok) {\r\n                // console.info(\"response-ok\", queryData);\r\n                const intervalID = setInterval(async () => {\r\n                    const response = await fetch(\r\n                        `${SERVER_LINK}/api/explore/status/${queryData.queryId}`,\r\n                        {\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            method: 'GET'\r\n                        }\r\n                    );\r\n                    const data = await response.json();\r\n                    if (!response.ok) {\r\n                        clearInterval(intervalID);\r\n                        setcodeSubmittingState('submitted');\r\n                        setResponse(data);\r\n                        // console.log(\"response-not-ok \", data);\r\n                    }\r\n                    else if (data.status !== 'pending') {\r\n                        clearInterval(intervalID);\r\n                        setcodeSubmittingState('submitted');\r\n                        setResponse({ ...data.output, status: data.status });\r\n                        // console.log(`status -> ${data.status}`, data);\r\n                    }\r\n                    // else console.log('status -> pending', data);\r\n                }, 1000);\r\n            }\r\n            else {\r\n                // console.log('response not ok ', queryData);\r\n                setcodeSubmittingState('submitted');\r\n            }\r\n\r\n            endRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        } catch (error) {\r\n            setResponse({ msg: 'caught errors while sending code to server for getting verdict', serverError: JSON.stringify(error) });\r\n            setcodeSubmittingState('submitted');\r\n        }\r\n    }\r\n\r\n    const resetCode = () => {\r\n        switch (selectedLang) {\r\n            case 'cpp':\r\n                setCode(defaultCppCode);\r\n                break;\r\n            case 'py':\r\n                setCode(defaultPythonCode);\r\n                break;\r\n            // case 'js':\r\n            //     setCode(defaultJsCode);\r\n            //     break;\r\n            // case 'java':\r\n            //     setCode(defaultJavaCode);\r\n            //     break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading && <LoadingSpinner />}\r\n            {!loading && error && (<div>\r\n                <div className='errorTemplate'>\r\n                    <div><span>Msg : </span>Wasn't able to connect to server check if your are not offline or server might not be working !</div>\r\n                    {error && <div><span>Error : </span>{JSON.stringify(error)}</div>}\r\n                </div>\r\n            </div>)}\r\n            {!loading && !error && (\r\n                <div className={classes.contain}>\r\n                    <div className={classes.back}>\r\n                        <div className={classes.codeSnippet}>\r\n                            &#60; go back to questions /&#62;\r\n                        </div>\r\n                        <ButtonCustom to='/questions' color='yellow'>\r\n                            <ArrowBackIcon style={{ marginRight: '0.3em', transform: 'translateX(-12px)', fontSize: '1.2em' }} />\r\n                            Back\r\n                        </ButtonCustom>\r\n                    </div>\r\n                    <div className={classes.head}>\r\n                        <div style={{ display: 'inline-block' }}>\r\n                            <div className={classes.heading}>{question.name}</div>\r\n                            <div className={classes.extraContent}>\r\n                                <div className={classes.level} diff-color={question.difficulty}>{question.difficulty}</div>\r\n                                <div className={classes.succ}>{question.noOfSuccess === 0 ? 0 : ((question.noOfSuccess / question.noOfSubm * 100).toFixed(2))}%<span> Success</span></div>\r\n                                <div className={classes.subm}>{question.noOfSubm} <span>Submissions</span></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.notHead}>\r\n                        <div className={classes.body}>\r\n                            <div className={classes.desc}>\r\n                                {question.description}\r\n                            </div>\r\n                        </div>\r\n                        {question.examples.map((example, index) => (\r\n                            <div key={index} className={classes.body}>\r\n                                <div className={classes.example} exn={index + 1}>\r\n                                    <div><span>Input : </span>{example.input}</div>\r\n                                    <div><span>Output : </span>{example.output}</div>\r\n                                    {example.explaination && <div><span>Explaination : </span>{example.explaination}</div>}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                        <div className={classes.editor}>\r\n                            <div className={classes.codeSnippet}>\r\n                                &#60; write your code here in <span style={{ color: 'red', textTransform: 'uppercase' }}>{selectedLang}</span> /&#62;\r\n                            </div>\r\n\r\n                            <Options\r\n                                favStyle={{\r\n                                    zIndex: '899',\r\n                                    position: 'absolute',\r\n                                    top: '-2rem',\r\n                                    right: '18%'\r\n                                }}\r\n                                resetCode={resetCode}\r\n                                selectedLang={selectedLang}\r\n                                codeFontSize={codeFontSize}\r\n                                setSelectedLang={setSelectedLang}\r\n                                setcodeFontSize={setcodeFontSize}\r\n                                codeEditable\r\n                            />\r\n\r\n                            <div className={classes.editorText}>\r\n                                <CodeEditorv3\r\n                                    selectedLang={selectedLang}\r\n                                    code={code}\r\n                                    setCode={setCode}\r\n                                    language={selectedLang}\r\n                                    fontSize={codeFontSize}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.submitBtn}>\r\n                            <div className={classes.codeSnippet}>\r\n                                &#60;&#160;\r\n                                {codeSubmittingState === 'submitting' ?\r\n                                    'wait for response' : (codeSubmittingState === 'not-initialized' ?\r\n                                        'click here to submit' : 'wanna submit again')}\r\n                                &#160;/&#62;\r\n                            </div>\r\n                            <ButtonCustom to='/' onClick={submitHandler} color='green'>\r\n                                {codeSubmittingState === 'submitting' ? 'Submitting' : 'Submit'}\r\n                                {codeSubmittingState === 'submitting' ? <div className={classes.spin} /> : <SendIcon style={{ marginLeft: '0.6em', fontSize: '1.2em' }} />}\r\n                            </ButtonCustom>\r\n                        </div>\r\n                        {codeSubmittingState !== 'not-initialized' && (\r\n                            <div className={classes.body}>\r\n                                <div style={{ \"--col\": (response.status === 'success' ? 127 : 0) }} className={classes.response}>\r\n                                    {response.msg && <div><span>Msg : </span>{response.msg}</div>}\r\n                                    {response.stdout && <div><span>STDOUT : </span>{response.stdout}</div>}\r\n                                    {response.stderr && <div><span>STDERR : </span>{response.stderr}</div>}\r\n                                    {response.error && <div><span>Error : </span>{JSON.stringify(response.error)}</div>}\r\n                                    {response.serverError && <div><span>serverError : </span>{response.serverError.toString()}</div>}\r\n                                    {response.status === 'pending' && <div style={{ marginTop: '2rem', display: 'flex', alignItems: 'center', justifyContent: 'center' }}> <LoadingSpinner /> </div>}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div aria-hidden ref={endRef}></div>\r\n                </div>\r\n            )}\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Question;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;"],"names":["props","handler","onClick","to","className","classes","color","children","code","setCode","language","fontSize","isReadOnly","isLoading","mode","Fragment","style","position","zIndex","display","alignItems","pointerEvents","translate","fontWeight","marginLeft","placeholder","theme","name","onLoad","onChange","value","parseInt","showPrintMargin","showGutter","readOnly","highlightActiveLine","width","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","Input","styled","MuiInput","codeFontSize","setValue","setcodeFontSize","Box","sx","marginRight","Grid","container","spacing","item","TextFields","xs","Slider","event","newValue","min","max","size","target","Number","onBlur","inputProps","step","type","favStyle","resetCode","selectedLang","codeEditable","setSelectedLang","useState","drawerOpen","toggleDrawerOpen","Fab","prev","top","whiteSpace","textTransform","Settings","Drawer","anchor","open","onClose","margin","FormControl","InputLabel","id","Select","labelId","label","height","e","MenuItem","Button","variant","startIcon","RestartAlt","useAsync","callback","dependencies","loading","setLoading","error","setError","callbackMemoized","useCallback","undefined","then","catch","finally","useEffect","DEFAULT_OPTIONS","headers","key","initialValue","jsonValue","localStorage","getItem","JSON","parse","setItem","stringify","defaultCppCode","defaultPythonCode","window","scrollTo","useParams","url","options","fetch","res","ok","json","Promise","reject","useFetch","SERVER_LINK","method","question","codeSubmittingState","setcodeSubmittingState","useLocalStorage","response","setResponse","endRef","useRef","submitHandler","preventDefault","console","log","credentials","body","testcase","quesName","query","queryData","intervalID","setInterval","queryId","data","status","clearInterval","output","current","scrollIntoView","behavior","block","msg","serverError","LoadingSpinner","ArrowBack","transform","difficulty","noOfSuccess","noOfSubm","toFixed","description","examples","map","example","index","exn","input","explaination","Options","right","CodeEditorv3","Send","stdout","stderr","toString","marginTop","justifyContent","ref","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}